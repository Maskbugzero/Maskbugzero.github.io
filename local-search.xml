<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>微软输入法快速输入时间</title>
    <link href="/posts/44dc6f23/"/>
    <url>/posts/44dc6f23/</url>
    
    <content type="html"><![CDATA[<h2 id="打开用户定义的短语"><a href="#打开用户定义的短语" class="headerlink" title="打开用户定义的短语"></a>打开用户定义的短语</h2><p>添加或编辑自定义短语</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">// 2021-03-05 18:10:03<br>%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%<br>// 2021年03月05日 18:09:59<br>%yyyy%年%MM%月%dd%日 %HH%:%mm%:%ss%<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Leaning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CloudFlare Workers 部署 VLESS 节点</title>
    <link href="/posts/511de239/"/>
    <url>/posts/511de239/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>CloudFlare Workers 部署 VLESS 节点</p><h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/zizifn/edgetunnel">zizifn&#x2F;edgetunnel</a></p><p>Running V2ray inside edge&#x2F;serverless runtime</p><h2 id="Workers代码"><a href="#Workers代码" class="headerlink" title="Workers代码"></a>Workers代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// &lt;!--GAMFC--&gt;version base on commit 43fad05dcdae3b723c53c226f8181fc5bd47223e, time is 2023-06-22 15:20:02 UTC&lt;!--GAMFC-END--&gt;.</span><br><span class="hljs-comment">// @ts-ignore</span><br><span class="hljs-keyword">import</span> &#123; connect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;cloudflare:sockets&#x27;</span>;<br><br><span class="hljs-comment">// How to generate your own UUID:</span><br><span class="hljs-comment">// [Windows] Press &quot;Win + R&quot;, input cmd and run:  Powershell -NoExit -Command &quot;[guid]::NewGuid()&quot;</span><br><span class="hljs-keyword">let</span> userID = <span class="hljs-string">&#x27;d342d11e-d424-4583-b36e-524ab1f0afa4&#x27;</span>;<br><br><span class="hljs-keyword">let</span> proxyIP = <span class="hljs-string">&#x27;&#x27;</span>;<br><br><br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isValidUUID</span>(userID)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;uuid is not valid&#x27;</span>);<br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Request</span>&#125; <span class="hljs-variable">request</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">&#123;UUID: string, PROXYIP: string</span>&#125;&#125; env</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).ExecutionContext</span>&#125; <span class="hljs-variable">ctx</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">Promise&lt;Response&gt;</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-params">request, env, ctx</span>) &#123;<br><span class="hljs-keyword">try</span> &#123;<br>userID = env.<span class="hljs-property">UUID</span> || userID;<br>proxyIP = env.<span class="hljs-property">PROXYIP</span> || proxyIP;<br><span class="hljs-keyword">const</span> upgradeHeader = request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;Upgrade&#x27;</span>);<br><span class="hljs-keyword">if</span> (!upgradeHeader || upgradeHeader !== <span class="hljs-string">&#x27;websocket&#x27;</span>) &#123;<br><span class="hljs-keyword">const</span> url = <span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(request.<span class="hljs-property">url</span>);<br><span class="hljs-keyword">switch</span> (url.<span class="hljs-property">pathname</span>) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-string">&#x27;/&#x27;</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(request.<span class="hljs-property">cf</span>), &#123; <span class="hljs-attr">status</span>: <span class="hljs-number">200</span> &#125;);<br><span class="hljs-keyword">case</span> <span class="hljs-string">`/<span class="hljs-subst">$&#123;userID&#125;</span>`</span>: &#123;<br><span class="hljs-keyword">const</span> vlessConfig = <span class="hljs-title function_">getVLESSConfig</span>(userID, request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;Host&#x27;</span>));<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-string">`<span class="hljs-subst">$&#123;vlessConfig&#125;</span>`</span>, &#123;<br><span class="hljs-attr">status</span>: <span class="hljs-number">200</span>,<br><span class="hljs-attr">headers</span>: &#123;<br><span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;text/plain;charset=utf-8&quot;</span>,<br>&#125;<br>&#125;);<br>&#125;<br><span class="hljs-attr">default</span>:<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-string">&#x27;Not found&#x27;</span>, &#123; <span class="hljs-attr">status</span>: <span class="hljs-number">404</span> &#125;);<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">await</span> <span class="hljs-title function_">vlessOverWSHandler</span>(request);<br>&#125;<br>&#125; <span class="hljs-keyword">catch</span> (err) &#123;<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">Error</span>&#125; */</span> <span class="hljs-keyword">let</span> e = err;<br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(e.<span class="hljs-title function_">toString</span>());<br>&#125;<br>&#125;,<br>&#125;;<br><br><br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Request</span>&#125; <span class="hljs-variable">request</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">vlessOverWSHandler</span>(<span class="hljs-params">request</span>) &#123;<br><br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket[]</span>&#125; */</span><br><span class="hljs-comment">// @ts-ignore</span><br><span class="hljs-keyword">const</span> webSocketPair = <span class="hljs-keyword">new</span> <span class="hljs-title class_">WebSocketPair</span>();<br><span class="hljs-keyword">const</span> [client, webSocket] = <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">values</span>(webSocketPair);<br><br>webSocket.<span class="hljs-title function_">accept</span>();<br><br><span class="hljs-keyword">let</span> address = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">let</span> portWithRandomLog = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">log</span> = (<span class="hljs-params"><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">string</span>&#125; */</span> info, <span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">string | undefined</span>&#125; */</span> event</span>) =&gt; &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[<span class="hljs-subst">$&#123;address&#125;</span>:<span class="hljs-subst">$&#123;portWithRandomLog&#125;</span>] <span class="hljs-subst">$&#123;info&#125;</span>`</span>, event || <span class="hljs-string">&#x27;&#x27;</span>);<br>&#125;;<br><span class="hljs-keyword">const</span> earlyDataHeader = request.<span class="hljs-property">headers</span>.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;sec-websocket-protocol&#x27;</span>) || <span class="hljs-string">&#x27;&#x27;</span>;<br><br><span class="hljs-keyword">const</span> readableWebSocketStream = <span class="hljs-title function_">makeReadableWebSocketStream</span>(webSocket, earlyDataHeader, log);<br><br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">&#123; value: import(&quot;@cloudflare/workers-types&quot;).Socket | null</span>&#125;&#125;*/</span><br><span class="hljs-keyword">let</span> remoteSocketWapper = &#123;<br><span class="hljs-attr">value</span>: <span class="hljs-literal">null</span>,<br>&#125;;<br><span class="hljs-keyword">let</span> udpStreamWrite = <span class="hljs-literal">null</span>;<br><span class="hljs-keyword">let</span> isDns = <span class="hljs-literal">false</span>;<br><br><span class="hljs-comment">// ws --&gt; remote</span><br>readableWebSocketStream.<span class="hljs-title function_">pipeTo</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WritableStream</span>(&#123;<br><span class="hljs-keyword">async</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">chunk, controller</span>) &#123;<br><span class="hljs-keyword">if</span> (isDns &amp;&amp; udpStreamWrite) &#123;<br><span class="hljs-keyword">return</span> <span class="hljs-title function_">udpStreamWrite</span>(chunk);<br>&#125;<br><span class="hljs-keyword">if</span> (remoteSocketWapper.<span class="hljs-property">value</span>) &#123;<br><span class="hljs-keyword">const</span> writer = remoteSocketWapper.<span class="hljs-property">value</span>.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>()<br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(chunk);<br>writer.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">return</span>;<br>&#125;<br><br><span class="hljs-keyword">const</span> &#123;<br>hasError,<br>message,<br>portRemote = <span class="hljs-number">443</span>,<br>addressRemote = <span class="hljs-string">&#x27;&#x27;</span>,<br>rawDataIndex,<br>vlessVersion = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]),<br>isUDP,<br>&#125; = <span class="hljs-title function_">processVlessHeader</span>(chunk, userID);<br>address = addressRemote;<br>portWithRandomLog = <span class="hljs-string">`<span class="hljs-subst">$&#123;portRemote&#125;</span>--<span class="hljs-subst">$&#123;<span class="hljs-built_in">Math</span>.random()&#125;</span> <span class="hljs-subst">$&#123;isUDP ? <span class="hljs-string">&#x27;udp &#x27;</span> : <span class="hljs-string">&#x27;tcp &#x27;</span></span></span><br><span class="hljs-subst"><span class="hljs-string">&#125;</span> `</span>;<br><span class="hljs-keyword">if</span> (hasError) &#123;<br><span class="hljs-comment">// controller.error(message);</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(message); <span class="hljs-comment">// cf seems has bug, controller.error will not end stream</span><br><span class="hljs-comment">// webSocket.close(1000, message);</span><br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-comment">// if UDP but port not DNS port, close it</span><br><span class="hljs-keyword">if</span> (isUDP) &#123;<br><span class="hljs-keyword">if</span> (portRemote === <span class="hljs-number">53</span>) &#123;<br>isDns = <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// controller.error(&#x27;UDP proxy only enable for DNS which is port 53&#x27;);</span><br><span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Error</span>(<span class="hljs-string">&#x27;UDP proxy only enable for DNS which is port 53&#x27;</span>); <span class="hljs-comment">// cf seems has bug, controller.error will not end stream</span><br><span class="hljs-keyword">return</span>;<br>&#125;<br>&#125;<br><span class="hljs-comment">// [&quot;version&quot;, &quot;附加信息长度 N&quot;]</span><br><span class="hljs-keyword">const</span> vlessResponseHeader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([vlessVersion[<span class="hljs-number">0</span>], <span class="hljs-number">0</span>]);<br><span class="hljs-keyword">const</span> rawClientData = chunk.<span class="hljs-title function_">slice</span>(rawDataIndex);<br><br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> support udp here when cf runtime has udp support</span><br><span class="hljs-keyword">if</span> (isDns) &#123;<br><span class="hljs-keyword">const</span> &#123; write &#125; = <span class="hljs-keyword">await</span> <span class="hljs-title function_">handleUDPOutBound</span>(webSocket, vlessResponseHeader, log);<br>udpStreamWrite = write;<br><span class="hljs-title function_">udpStreamWrite</span>(rawClientData);<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-title function_">handleTCPOutBound</span>(remoteSocketWapper, addressRemote, portRemote, rawClientData, webSocket, vlessResponseHeader, log);<br>&#125;,<br><span class="hljs-title function_">close</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`readableWebSocketStream is close`</span>);<br>&#125;,<br><span class="hljs-title function_">abort</span>(<span class="hljs-params">reason</span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`readableWebSocketStream is abort`</span>, <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(reason));<br>&#125;,<br>&#125;)).<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;readableWebSocketStream pipeTo error&#x27;</span>, err);<br>&#125;);<br><br><span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Response</span>(<span class="hljs-literal">null</span>, &#123;<br><span class="hljs-attr">status</span>: <span class="hljs-number">101</span>,<br><span class="hljs-comment">// @ts-ignore</span><br><span class="hljs-attr">webSocket</span>: client,<br>&#125;);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Handles outbound TCP connections.</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">any</span>&#125; remoteSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; addressRemote The remote address to connect to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">number</span>&#125; portRemote The remote port to connect to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; rawClientData The raw client data to write.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; webSocket The WebSocket to pass the remote socket to.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; vlessResponseHeader The VLESS response header.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">function</span>&#125; log The logging function.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">Promise&lt;void&gt;</span>&#125; The remote socket.</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">handleTCPOutBound</span>(<span class="hljs-params">remoteSocket, addressRemote, portRemote, rawClientData, webSocket, vlessResponseHeader, log,</span>) &#123;<br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">connectAndWrite</span>(<span class="hljs-params">address, port</span>) &#123;<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Socket</span>&#125; */</span><br><span class="hljs-keyword">const</span> tcpSocket = <span class="hljs-title function_">connect</span>(&#123;<br><span class="hljs-attr">hostname</span>: address,<br><span class="hljs-attr">port</span>: port,<br>&#125;);<br>remoteSocket.<span class="hljs-property">value</span> = tcpSocket;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`connected to <span class="hljs-subst">$&#123;address&#125;</span>:<span class="hljs-subst">$&#123;port&#125;</span>`</span>);<br><span class="hljs-keyword">const</span> writer = tcpSocket.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>();<br><span class="hljs-keyword">await</span> writer.<span class="hljs-title function_">write</span>(rawClientData); <span class="hljs-comment">// first write, nomal is tls client hello</span><br>writer.<span class="hljs-title function_">releaseLock</span>();<br><span class="hljs-keyword">return</span> tcpSocket;<br>&#125;<br><br><span class="hljs-comment">// if the cf connect tcp socket have no incoming data, we retry to redirect ip</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">retry</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">const</span> tcpSocket = <span class="hljs-keyword">await</span> <span class="hljs-title function_">connectAndWrite</span>(proxyIP || addressRemote, portRemote)<br><span class="hljs-comment">// no matter retry success or not, close websocket</span><br>tcpSocket.<span class="hljs-property">closed</span>.<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">error</span> =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;retry tcpSocket closed error&#x27;</span>, error);<br>&#125;).<span class="hljs-title function_">finally</span>(<span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocket);<br>&#125;)<br><span class="hljs-title function_">remoteSocketToWS</span>(tcpSocket, webSocket, vlessResponseHeader, <span class="hljs-literal">null</span>, log);<br>&#125;<br><br><span class="hljs-keyword">const</span> tcpSocket = <span class="hljs-keyword">await</span> <span class="hljs-title function_">connectAndWrite</span>(addressRemote, portRemote);<br><br><span class="hljs-comment">// when remoteSocket is ready, pass to websocket</span><br><span class="hljs-comment">// remote--&gt; ws</span><br><span class="hljs-title function_">remoteSocketToWS</span>(tcpSocket, webSocket, vlessResponseHeader, retry, log);<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; <span class="hljs-variable">webSocketServer</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; earlyDataHeader for ws 0rtt</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">(info: string)=&gt; void</span>&#125; log for ws 0rtt</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">makeReadableWebSocketStream</span>(<span class="hljs-params">webSocketServer, earlyDataHeader, log</span>) &#123;<br><span class="hljs-keyword">let</span> readableStreamCancel = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">const</span> stream = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ReadableStream</span>(&#123;<br><span class="hljs-title function_">start</span>(<span class="hljs-params">controller</span>) &#123;<br>webSocketServer.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;message&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">event</span>) =&gt;</span> &#123;<br><span class="hljs-keyword">if</span> (readableStreamCancel) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-keyword">const</span> message = event.<span class="hljs-property">data</span>;<br>controller.<span class="hljs-title function_">enqueue</span>(message);<br>&#125;);<br><br><span class="hljs-comment">// The event means that the client closed the client -&gt; server stream.</span><br><span class="hljs-comment">// However, the server -&gt; client stream is still open until you call close() on the server side.</span><br><span class="hljs-comment">// The WebSocket protocol says that a separate close message must be sent in each direction to fully close the socket.</span><br>webSocketServer.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;close&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br><span class="hljs-comment">// client send close, need close server</span><br><span class="hljs-comment">// if stream is cancel, skip controller.close</span><br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocketServer);<br><span class="hljs-keyword">if</span> (readableStreamCancel) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br>controller.<span class="hljs-title function_">close</span>();<br>&#125;<br>);<br>webSocketServer.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;webSocketServer has error&#x27;</span>);<br>controller.<span class="hljs-title function_">error</span>(err);<br>&#125;<br>);<br><span class="hljs-comment">// for ws 0rtt</span><br><span class="hljs-keyword">const</span> &#123; earlyData, error &#125; = <span class="hljs-title function_">base64ToArrayBuffer</span>(earlyDataHeader);<br><span class="hljs-keyword">if</span> (error) &#123;<br>controller.<span class="hljs-title function_">error</span>(error);<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (earlyData) &#123;<br>controller.<span class="hljs-title function_">enqueue</span>(earlyData);<br>&#125;<br>&#125;,<br><br><span class="hljs-title function_">pull</span>(<span class="hljs-params">controller</span>) &#123;<br><span class="hljs-comment">// if ws can stop read if stream is full, we can implement backpressure</span><br><span class="hljs-comment">// https://streams.spec.whatwg.org/#example-rs-push-backpressure</span><br>&#125;,<br><span class="hljs-title function_">cancel</span>(<span class="hljs-params">reason</span>) &#123;<br><span class="hljs-comment">// 1. pipe WritableStream has error, this cancel will called, so ws handle server close into here</span><br><span class="hljs-comment">// 2. if readableStream is cancel, all controller.close/enqueue need skip,</span><br><span class="hljs-comment">// 3. but from testing controller.error still work even if readableStream is cancel</span><br><span class="hljs-keyword">if</span> (readableStreamCancel) &#123;<br><span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`ReadableStream was canceled, due to <span class="hljs-subst">$&#123;reason&#125;</span>`</span>)<br>readableStreamCancel = <span class="hljs-literal">true</span>;<br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocketServer);<br>&#125;<br>&#125;);<br><br><span class="hljs-keyword">return</span> stream;<br><br>&#125;<br><br><span class="hljs-comment">// https://xtls.github.io/development/protocols/vless.html</span><br><span class="hljs-comment">// https://github.com/zizifn/excalidraw-backup/blob/main/v2ray-protocol.excalidraw</span><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type"> ArrayBuffer</span>&#125; vlessBuffer </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; userID </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">processVlessHeader</span>(<span class="hljs-params"></span><br><span class="hljs-params">vlessBuffer,</span><br><span class="hljs-params">userID</span><br><span class="hljs-params"></span>) &#123;<br><span class="hljs-keyword">if</span> (vlessBuffer.<span class="hljs-property">byteLength</span> &lt; <span class="hljs-number">24</span>) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;invalid data&#x27;</span>,<br>&#125;;<br>&#125;<br><span class="hljs-keyword">const</span> version = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">1</span>));<br><span class="hljs-keyword">let</span> isValidUser = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">let</span> isUDP = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-title function_">stringify</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>, <span class="hljs-number">17</span>))) === userID) &#123;<br>isValidUser = <span class="hljs-literal">true</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (!isValidUser) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;invalid user&#x27;</span>,<br>&#125;;<br>&#125;<br><br><span class="hljs-keyword">const</span> optLength = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">17</span>, <span class="hljs-number">18</span>))[<span class="hljs-number">0</span>];<br><span class="hljs-comment">//skip opt for now</span><br><br><span class="hljs-keyword">const</span> command = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(<span class="hljs-number">18</span> + optLength, <span class="hljs-number">18</span> + optLength + <span class="hljs-number">1</span>)<br>)[<span class="hljs-number">0</span>];<br><br><span class="hljs-comment">// 0x01 TCP</span><br><span class="hljs-comment">// 0x02 UDP</span><br><span class="hljs-comment">// 0x03 MUX</span><br><span class="hljs-keyword">if</span> (command === <span class="hljs-number">1</span>) &#123;<br>&#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (command === <span class="hljs-number">2</span>) &#123;<br>isUDP = <span class="hljs-literal">true</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">`command <span class="hljs-subst">$&#123;command&#125;</span> is not support, command 01-tcp,02-udp,03-mux`</span>,<br>&#125;;<br>&#125;<br><span class="hljs-keyword">const</span> portIndex = <span class="hljs-number">18</span> + optLength + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">const</span> portBuffer = vlessBuffer.<span class="hljs-title function_">slice</span>(portIndex, portIndex + <span class="hljs-number">2</span>);<br><span class="hljs-comment">// port is big-Endian in raw data etc 80 == 0x005d</span><br><span class="hljs-keyword">const</span> portRemote = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataView</span>(portBuffer).<span class="hljs-title function_">getUint16</span>(<span class="hljs-number">0</span>);<br><br><span class="hljs-keyword">let</span> addressIndex = portIndex + <span class="hljs-number">2</span>;<br><span class="hljs-keyword">const</span> addressBuffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressIndex, addressIndex + <span class="hljs-number">1</span>)<br>);<br><br><span class="hljs-comment">// 1--&gt; ipv4  addressLength =4</span><br><span class="hljs-comment">// 2--&gt; domain name addressLength=addressBuffer[1]</span><br><span class="hljs-comment">// 3--&gt; ipv6  addressLength =16</span><br><span class="hljs-keyword">const</span> addressType = addressBuffer[<span class="hljs-number">0</span>];<br><span class="hljs-keyword">let</span> addressLength = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> addressValueIndex = addressIndex + <span class="hljs-number">1</span>;<br><span class="hljs-keyword">let</span> addressValue = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">switch</span> (addressType) &#123;<br><span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:<br>addressLength = <span class="hljs-number">4</span>;<br>addressValue = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + addressLength)<br>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;.&#x27;</span>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:<br>addressLength = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + <span class="hljs-number">1</span>)<br>)[<span class="hljs-number">0</span>];<br>addressValueIndex += <span class="hljs-number">1</span>;<br>addressValue = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TextDecoder</span>().<span class="hljs-title function_">decode</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + addressLength)<br>);<br><span class="hljs-keyword">break</span>;<br><span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:<br>addressLength = <span class="hljs-number">16</span>;<br><span class="hljs-keyword">const</span> dataView = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataView</span>(<br>vlessBuffer.<span class="hljs-title function_">slice</span>(addressValueIndex, addressValueIndex + addressLength)<br>);<br><span class="hljs-comment">// 2001:0db8:85a3:0000:0000:8a2e:0370:7334</span><br><span class="hljs-keyword">const</span> ipv6 = [];<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">8</span>; i++) &#123;<br>ipv6.<span class="hljs-title function_">push</span>(dataView.<span class="hljs-title function_">getUint16</span>(i * <span class="hljs-number">2</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>));<br>&#125;<br>addressValue = ipv6.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;:&#x27;</span>);<br><span class="hljs-comment">// seems no need add [] for ipv6</span><br><span class="hljs-keyword">break</span>;<br><span class="hljs-attr">default</span>:<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">`invild  addressType is <span class="hljs-subst">$&#123;addressType&#125;</span>`</span>,<br>&#125;;<br>&#125;<br><span class="hljs-keyword">if</span> (!addressValue) &#123;<br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">true</span>,<br><span class="hljs-attr">message</span>: <span class="hljs-string">`addressValue is empty, addressType is <span class="hljs-subst">$&#123;addressType&#125;</span>`</span>,<br>&#125;;<br>&#125;<br><br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-attr">hasError</span>: <span class="hljs-literal">false</span>,<br><span class="hljs-attr">addressRemote</span>: addressValue,<br>addressType,<br>portRemote,<br><span class="hljs-attr">rawDataIndex</span>: addressValueIndex + addressLength,<br><span class="hljs-attr">vlessVersion</span>: version,<br>isUDP,<br>&#125;;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).Socket</span>&#125; remoteSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; webSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">ArrayBuffer</span>&#125; vlessResponseHeader </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">(() =&gt; Promise&lt;void&gt;) | null</span>&#125; <span class="hljs-variable">retry</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">*</span>&#125; log </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">remoteSocketToWS</span>(<span class="hljs-params">remoteSocket, webSocket, vlessResponseHeader, retry, log</span>) &#123;<br><span class="hljs-comment">// remote--&gt; ws</span><br><span class="hljs-keyword">let</span> remoteChunkCount = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">let</span> chunks = [];<br><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> &#123;<span class="hljs-type">ArrayBuffer | null</span>&#125; */</span><br><span class="hljs-keyword">let</span> vlessHeader = vlessResponseHeader;<br><span class="hljs-keyword">let</span> hasIncomingData = <span class="hljs-literal">false</span>; <span class="hljs-comment">// check if remoteSocket has incoming data</span><br><span class="hljs-keyword">await</span> remoteSocket.<span class="hljs-property">readable</span><br>.<span class="hljs-title function_">pipeTo</span>(<br><span class="hljs-keyword">new</span> <span class="hljs-title class_">WritableStream</span>(&#123;<br><span class="hljs-title function_">start</span>(<span class="hljs-params"></span>) &#123;<br>&#125;,<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; chunk </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">*</span>&#125; controller </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">chunk, controller</span>) &#123;<br>hasIncomingData = <span class="hljs-literal">true</span>;<br><span class="hljs-comment">// remoteChunkCount++;</span><br><span class="hljs-keyword">if</span> (webSocket.<span class="hljs-property">readyState</span> !== <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span>) &#123;<br>controller.<span class="hljs-title function_">error</span>(<br><span class="hljs-string">&#x27;webSocket.readyState is not open, maybe close&#x27;</span><br>);<br>&#125;<br><span class="hljs-keyword">if</span> (vlessHeader) &#123;<br>webSocket.<span class="hljs-title function_">send</span>(<span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([vlessHeader, chunk]).<span class="hljs-title function_">arrayBuffer</span>());<br>vlessHeader = <span class="hljs-literal">null</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-comment">// seems no need rate limit this, CF seems fix this??..</span><br><span class="hljs-comment">// if (remoteChunkCount &gt; 20000) &#123;</span><br><span class="hljs-comment">// // cf one package is 4096 byte(4kb),  4096 * 20000 = 80M</span><br><span class="hljs-comment">// await delay(1);</span><br><span class="hljs-comment">// &#125;</span><br>webSocket.<span class="hljs-title function_">send</span>(chunk);<br>&#125;<br>&#125;,<br><span class="hljs-title function_">close</span>(<span class="hljs-params"></span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`remoteConnection!.readable is close with hasIncomingData is <span class="hljs-subst">$&#123;hasIncomingData&#125;</span>`</span>);<br><span class="hljs-comment">// safeCloseWebSocket(webSocket); // no need server close websocket frist for some case will casue HTTP ERR_CONTENT_LENGTH_MISMATCH issue, client will send close event anyway.</span><br>&#125;,<br><span class="hljs-title function_">abort</span>(<span class="hljs-params">reason</span>) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">`remoteConnection!.readable abort`</span>, reason);<br>&#125;,<br>&#125;)<br>)<br>.<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<br><span class="hljs-string">`remoteSocketToWS has exception `</span>,<br>error.<span class="hljs-property">stack</span> || error<br>);<br><span class="hljs-title function_">safeCloseWebSocket</span>(webSocket);<br>&#125;);<br><br><span class="hljs-comment">// seems is cf connect socket have error,</span><br><span class="hljs-comment">// 1. Socket.closed will have error</span><br><span class="hljs-comment">// 2. Socket.readable will be close without any data coming</span><br><span class="hljs-keyword">if</span> (hasIncomingData === <span class="hljs-literal">false</span> &amp;&amp; retry) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`retry`</span>)<br><span class="hljs-title function_">retry</span>();<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; base64Str </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">base64ToArrayBuffer</span>(<span class="hljs-params">base64Str</span>) &#123;<br><span class="hljs-keyword">if</span> (!base64Str) &#123;<br><span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">error</span>: <span class="hljs-literal">null</span> &#125;;<br>&#125;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-comment">// go use modified Base64 for URL rfc4648 which js atob not support</span><br>base64Str = base64Str.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/-/g</span>, <span class="hljs-string">&#x27;+&#x27;</span>).<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/_/g</span>, <span class="hljs-string">&#x27;/&#x27;</span>);<br><span class="hljs-keyword">const</span> decode = <span class="hljs-title function_">atob</span>(base64Str);<br><span class="hljs-keyword">const</span> arryBuffer = <span class="hljs-title class_">Uint8Array</span>.<span class="hljs-title function_">from</span>(decode, <span class="hljs-function">(<span class="hljs-params">c</span>) =&gt;</span> c.<span class="hljs-title function_">charCodeAt</span>(<span class="hljs-number">0</span>));<br><span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">earlyData</span>: arryBuffer.<span class="hljs-property">buffer</span>, <span class="hljs-attr">error</span>: <span class="hljs-literal">null</span> &#125;;<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123;<br><span class="hljs-keyword">return</span> &#123; error &#125;;<br>&#125;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * This is not real UUID validation</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; uuid </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">isValidUUID</span>(<span class="hljs-params">uuid</span>) &#123;<br><span class="hljs-keyword">const</span> uuidRegex = <span class="hljs-regexp">/^[0-9a-f]&#123;8&#125;-[0-9a-f]&#123;4&#125;-[4][0-9a-f]&#123;3&#125;-[89ab][0-9a-f]&#123;3&#125;-[0-9a-f]&#123;12&#125;$/i</span>;<br><span class="hljs-keyword">return</span> uuidRegex.<span class="hljs-title function_">test</span>(uuid);<br>&#125;<br><br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span> = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-variable constant_">WS_READY_STATE_CLOSING</span> = <span class="hljs-number">2</span>;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Normally, WebSocket will not has exceptions when close.</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; <span class="hljs-variable">socket</span></span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">safeCloseWebSocket</span>(<span class="hljs-params">socket</span>) &#123;<br><span class="hljs-keyword">try</span> &#123;<br><span class="hljs-keyword">if</span> (socket.<span class="hljs-property">readyState</span> === <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span> || socket.<span class="hljs-property">readyState</span> === <span class="hljs-variable constant_">WS_READY_STATE_CLOSING</span>) &#123;<br>socket.<span class="hljs-title function_">close</span>();<br>&#125;<br>&#125; <span class="hljs-keyword">catch</span> (error) &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(<span class="hljs-string">&#x27;safeCloseWebSocket error&#x27;</span>, error);<br>&#125;<br>&#125;<br><br><span class="hljs-keyword">const</span> byteToHex = [];<br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; ++i) &#123;<br>byteToHex.<span class="hljs-title function_">push</span>((i + <span class="hljs-number">256</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>).<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>));<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">unsafeStringify</span>(<span class="hljs-params">arr, offset = <span class="hljs-number">0</span></span>) &#123;<br><span class="hljs-keyword">return</span> (byteToHex[arr[offset + <span class="hljs-number">0</span>]] + byteToHex[arr[offset + <span class="hljs-number">1</span>]] + byteToHex[arr[offset + <span class="hljs-number">2</span>]] + byteToHex[arr[offset + <span class="hljs-number">3</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">4</span>]] + byteToHex[arr[offset + <span class="hljs-number">5</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">6</span>]] + byteToHex[arr[offset + <span class="hljs-number">7</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">8</span>]] + byteToHex[arr[offset + <span class="hljs-number">9</span>]] + <span class="hljs-string">&quot;-&quot;</span> + byteToHex[arr[offset + <span class="hljs-number">10</span>]] + byteToHex[arr[offset + <span class="hljs-number">11</span>]] + byteToHex[arr[offset + <span class="hljs-number">12</span>]] + byteToHex[arr[offset + <span class="hljs-number">13</span>]] + byteToHex[arr[offset + <span class="hljs-number">14</span>]] + byteToHex[arr[offset + <span class="hljs-number">15</span>]]).<span class="hljs-title function_">toLowerCase</span>();<br>&#125;<br><span class="hljs-keyword">function</span> <span class="hljs-title function_">stringify</span>(<span class="hljs-params">arr, offset = <span class="hljs-number">0</span></span>) &#123;<br><span class="hljs-keyword">const</span> uuid = <span class="hljs-title function_">unsafeStringify</span>(arr, offset);<br><span class="hljs-keyword">if</span> (!<span class="hljs-title function_">isValidUUID</span>(uuid)) &#123;<br><span class="hljs-keyword">throw</span> <span class="hljs-title class_">TypeError</span>(<span class="hljs-string">&quot;Stringified UUID is invalid&quot;</span>);<br>&#125;<br><span class="hljs-keyword">return</span> uuid;<br>&#125;<br><br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">import(&quot;@cloudflare/workers-types&quot;).WebSocket</span>&#125; webSocket </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">ArrayBuffer</span>&#125; vlessResponseHeader </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">(string)=&gt; void</span>&#125; log </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">handleUDPOutBound</span>(<span class="hljs-params">webSocket, vlessResponseHeader, log</span>) &#123;<br><br><span class="hljs-keyword">let</span> isVlessHeaderSent = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">const</span> transformStream = <span class="hljs-keyword">new</span> <span class="hljs-title class_">TransformStream</span>(&#123;<br><span class="hljs-title function_">start</span>(<span class="hljs-params">controller</span>) &#123;<br><br>&#125;,<br><span class="hljs-title function_">transform</span>(<span class="hljs-params">chunk, controller</span>) &#123;<br><span class="hljs-comment">// udp message 2 byte is the the length of udp data</span><br><span class="hljs-comment">// <span class="hljs-doctag">TODO:</span> this should have bug, beacsue maybe udp chunk can be in two websocket message</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index = <span class="hljs-number">0</span>; index &lt; chunk.<span class="hljs-property">byteLength</span>;) &#123;<br><span class="hljs-keyword">const</span> lengthBuffer = chunk.<span class="hljs-title function_">slice</span>(index, index + <span class="hljs-number">2</span>);<br><span class="hljs-keyword">const</span> udpPakcetLength = <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataView</span>(lengthBuffer).<span class="hljs-title function_">getUint16</span>(<span class="hljs-number">0</span>);<br><span class="hljs-keyword">const</span> udpData = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>(<br>chunk.<span class="hljs-title function_">slice</span>(index + <span class="hljs-number">2</span>, index + <span class="hljs-number">2</span> + udpPakcetLength)<br>);<br>index = index + <span class="hljs-number">2</span> + udpPakcetLength;<br>controller.<span class="hljs-title function_">enqueue</span>(udpData);<br>&#125;<br>&#125;,<br><span class="hljs-title function_">flush</span>(<span class="hljs-params">controller</span>) &#123;<br>&#125;<br>&#125;);<br><br><span class="hljs-comment">// only handle dns udp for now</span><br>transformStream.<span class="hljs-property">readable</span>.<span class="hljs-title function_">pipeTo</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">WritableStream</span>(&#123;<br><span class="hljs-keyword">async</span> <span class="hljs-title function_">write</span>(<span class="hljs-params">chunk</span>) &#123;<br><span class="hljs-keyword">const</span> resp = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<span class="hljs-string">&#x27;https://1.1.1.1/dns-query&#x27;</span>,<br>&#123;<br><span class="hljs-attr">method</span>: <span class="hljs-string">&#x27;POST&#x27;</span>,<br><span class="hljs-attr">headers</span>: &#123;<br><span class="hljs-string">&#x27;content-type&#x27;</span>: <span class="hljs-string">&#x27;application/dns-message&#x27;</span>,<br>&#125;,<br><span class="hljs-attr">body</span>: chunk,<br>&#125;)<br><span class="hljs-keyword">const</span> dnsQueryResult = <span class="hljs-keyword">await</span> resp.<span class="hljs-title function_">arrayBuffer</span>();<br><span class="hljs-keyword">const</span> udpSize = dnsQueryResult.<span class="hljs-property">byteLength</span>;<br><span class="hljs-comment">// console.log([...new Uint8Array(dnsQueryResult)].map((x) =&gt; x.toString(16)));</span><br><span class="hljs-keyword">const</span> udpSizeBuffer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Uint8Array</span>([(udpSize &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xff</span>, udpSize &amp; <span class="hljs-number">0xff</span>]);<br><span class="hljs-keyword">if</span> (webSocket.<span class="hljs-property">readyState</span> === <span class="hljs-variable constant_">WS_READY_STATE_OPEN</span>) &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">`doh success and dns message length is <span class="hljs-subst">$&#123;udpSize&#125;</span>`</span>);<br><span class="hljs-keyword">if</span> (isVlessHeaderSent) &#123;<br>webSocket.<span class="hljs-title function_">send</span>(<span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([udpSizeBuffer, dnsQueryResult]).<span class="hljs-title function_">arrayBuffer</span>());<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>webSocket.<span class="hljs-title function_">send</span>(<span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([vlessResponseHeader, udpSizeBuffer, dnsQueryResult]).<span class="hljs-title function_">arrayBuffer</span>());<br>isVlessHeaderSent = <span class="hljs-literal">true</span>;<br>&#125;<br>&#125;<br>&#125;<br>&#125;)).<span class="hljs-title function_">catch</span>(<span class="hljs-function">(<span class="hljs-params">error</span>) =&gt;</span> &#123;<br><span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;dns udp has error&#x27;</span> + error)<br>&#125;);<br><br><span class="hljs-keyword">const</span> writer = transformStream.<span class="hljs-property">writable</span>.<span class="hljs-title function_">getWriter</span>();<br><br><span class="hljs-keyword">return</span> &#123;<br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">Uint8Array</span>&#125; chunk </span><br><span class="hljs-comment"> */</span><br><span class="hljs-title function_">write</span>(<span class="hljs-params">chunk</span>) &#123;<br>writer.<span class="hljs-title function_">write</span>(chunk);<br>&#125;<br>&#125;;<br>&#125;<br><br><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string</span>&#125; userID </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@param</span> &#123;<span class="hljs-type">string | null</span>&#125; <span class="hljs-variable">hostName</span></span><br><span class="hljs-comment"> * <span class="hljs-doctag">@returns</span> &#123;<span class="hljs-type">string</span>&#125;</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getVLESSConfig</span>(<span class="hljs-params">userID, hostName</span>) &#123;<br><span class="hljs-keyword">const</span> vlessMain = <span class="hljs-string">`vless://<span class="hljs-subst">$&#123;userID&#125;</span>@<span class="hljs-subst">$&#123;hostName&#125;</span>:443?encryption=none&amp;security=tls&amp;sni=<span class="hljs-subst">$&#123;hostName&#125;</span>&amp;fp=randomized&amp;type=ws&amp;host=<span class="hljs-subst">$&#123;hostName&#125;</span>&amp;path=%2F%3Fed%3D2048#<span class="hljs-subst">$&#123;hostName&#125;</span>`</span><br><span class="hljs-keyword">return</span> <span class="hljs-string">`</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">v2ray</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string"><span class="hljs-subst">$&#123;vlessMain&#125;</span></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">clash-meta</span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">- type: vless</span><br><span class="hljs-string">  name: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">  server: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">  port: 443</span><br><span class="hljs-string">  uuid: <span class="hljs-subst">$&#123;userID&#125;</span></span><br><span class="hljs-string">  network: ws</span><br><span class="hljs-string">  tls: true</span><br><span class="hljs-string">  udp: false</span><br><span class="hljs-string">  sni: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">  client-fingerprint: chrome</span><br><span class="hljs-string">  ws-opts:</span><br><span class="hljs-string">    path: &quot;/?ed=2048&quot;</span><br><span class="hljs-string">    headers:</span><br><span class="hljs-string">      host: <span class="hljs-subst">$&#123;hostName&#125;</span></span><br><span class="hljs-string">---------------------------------------------------------------</span><br><span class="hljs-string">################################################################</span><br><span class="hljs-string">`</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>从 <a href="https://www.uuidgenerator.net/">https://www.uuidgenerator.net/</a> 生成一个新的 UUID，然后替换第7行默认的 UUID，然后点击“Save and deploy”按钮，保存代码。</p><p>在访问的域名后面加上 &#x2F;UUID 就可以得到关于 workers 节点的分享链接信息</p><h2 id="优选-CloudFlare-IP"><a href="#优选-CloudFlare-IP" class="headerlink" title="优选 CloudFlare IP"></a>优选 CloudFlare IP</h2><p>使用<code>https://github.com/XIU2/CloudflareSpeedTest</code>项目</p>]]></content>
    
    
    <categories>
      
      <category>CloudFlare</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CloudFlare</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>微软Bing站长使用Python自动提交URL</title>
    <link href="/posts/500de239/"/>
    <url>/posts/500de239/</url>
    
    <content type="html"><![CDATA[<h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><p>利用crontab定时执行py文件自动提交文章URL给微软bing</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>新建一个<code>urldelay.py</code>文件</p><p>文件内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> xml.etree.ElementTree <span class="hljs-keyword">as</span> ET<br><br><span class="hljs-comment"># 发送HTTP请求获取站点地图内容</span><br>sitemap_url = <span class="hljs-string">&#x27;https://blog.5772447.xyz/sitemap.xml&#x27;</span><br>response = requests.get(sitemap_url)<br><br><span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>    <span class="hljs-comment"># 解析XML内容</span><br>    root = ET.fromstring(response.content)<br><br>    url_list = []<br><br>    <span class="hljs-keyword">for</span> url_element <span class="hljs-keyword">in</span> root.findall(<span class="hljs-string">&#x27;.//&#123;http://www.sitemaps.org/schemas/sitemap/0.9&#125;url&#x27;</span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(url_list) &gt;= <span class="hljs-number">10</span>:<br>            <span class="hljs-keyword">break</span><br>        url = url_element.findtext(<span class="hljs-string">&#x27;&#123;http://www.sitemaps.org/schemas/sitemap/0.9&#125;loc&#x27;</span>)<br>        <span class="hljs-keyword">if</span> url:<br>            url_list.append(url)<br><br>    <span class="hljs-comment"># 打印获取到的URL列表</span><br>    <span class="hljs-built_in">print</span>(url_list)<br><br>    <span class="hljs-comment"># 构造POST请求的数据</span><br>    data = &#123;<br>        <span class="hljs-string">&quot;siteUrl&quot;</span>: <span class="hljs-string">&quot;https://blog.5772447.xyz&quot;</span>,<br>        <span class="hljs-string">&quot;urlList&quot;</span>: url_list<br>    &#125;<br><br>    api_key = <span class="hljs-string">&quot;自己的微软站长推送api&quot;</span><br>    headers = &#123;<br>        <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;application/json; charset=utf-8&quot;</span><br>    &#125;<br><br>    <span class="hljs-comment"># 发送POST请求</span><br>    submit_url = <span class="hljs-string">f&quot;https://ssl.bing.com/webmaster/api.svc/json/SubmitUrlbatch?apikey=<span class="hljs-subst">&#123;api_key&#125;</span>&quot;</span><br>    response = requests.post(submit_url, json=data, headers=headers)<br><br>    <span class="hljs-keyword">if</span> response.status_code == <span class="hljs-number">200</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;URLs提交成功！&quot;</span>)<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;URLs提交失败。状态码:&quot;</span>, response.status_code)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Failed to retrieve sitemap. Status code:&#x27;</span>, response.status_code)<br>      <br></code></pre></td></tr></table></figure><p>自行配置代码中的<br>sitemap_url &#x3D; ‘<a href="https://blog.5772447.xyz/sitemap.xml">https://blog.5772447.xyz/sitemap.xml</a>‘</p><p>“siteUrl”: “<a href="https://blog.5772447.xyz/">https://blog.5772447.xyz</a>“,</p><p>api_key &#x3D; “自己的微软站长推送api”</p><p>PS：自行安装 requests 库，可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">pip install requests<br></code></pre></td></tr></table></figure><p>如果Python环境是通过apt进行管理，的可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">apt update<br>apt install python3-requests<br></code></pre></td></tr></table></figure><h2 id="crontab使用配置"><a href="#crontab使用配置" class="headerlink" title="crontab使用配置"></a>crontab使用配置</h2><p>将上述文件存于文件夹<code>/home/script</code>，具体地址可以自定义</p><p>使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">crontab -e<br></code></pre></td></tr></table></figure><p>然后在最下面填写</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">0 9 * * * python3 /home/script/urldelay.py &gt;&gt; /home/script/urldelay.log 2&gt;&amp;1<br></code></pre></td></tr></table></figure><p>最后ctrl+X  按y 回车保存</p><h2 id="具体执行情况"><a href="#具体执行情况" class="headerlink" title="具体执行情况"></a>具体执行情况</h2><p>可以在<code>/home/script/urldelay.log</code>文件中查看</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs log">[&#x27;https://blog.5772447.xyz/tags/index.html&#x27;, &#x27;https://blog.5772447.xyz/categories/index.html&#x27;, &#x27;https://blog.5772447.xyz/posts/973246e2/&#x27;, &#x27;https://blog.5772447.xyz/posts/29dc6fe8/&#x27;, &#x27;https://blog.5772447.xyz/posts/29dc6fe9/&#x27;, &#x27;https://blog.5772447.xyz/posts/c817a32b/&#x27;, &#x27;https://blog.5772447.xyz/posts/7c4a1a51/&#x27;, &#x27;https://blog.5772447.xyz/posts/8373160e/&#x27;, &#x27;https://blog.5772447.xyz/posts/500de237/&#x27;, &#x27;https://blog.5772447.xyz/posts/c817a34b/&#x27;]<br>URLs提交成功！<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>霸刀配装总览</title>
    <link href="/posts/c811g34b/"/>
    <url>/posts/c811g34b/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>各版本霸刀配装总览</p><h2 id="丝路风语"><a href="#丝路风语" class="headerlink" title="丝路风语"></a>丝路风语</h2><h2 id="雾海寻龙"><a href="#雾海寻龙" class="headerlink" title="雾海寻龙"></a>雾海寻龙</h2><p><img src="/img/whxl.webp" alt="雾海寻龙"></p><h2 id="万灵当歌"><a href="#万灵当歌" class="headerlink" title="万灵当歌"></a>万灵当歌</h2><p><img src="/img/1701654739917.webp" alt="万灵当歌"></p><h2 id="群侠万变"><a href="#群侠万变" class="headerlink" title="群侠万变"></a>群侠万变</h2><p><img src="/img/1691568594998.webp" alt="群侠万变"></p>]]></content>
    
    
    <categories>
      
      <category>配装</category>
      
    </categories>
    
    
    <tags>
      
      <tag>配装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>沛喆PZ-L8路由器刷机教程</title>
    <link href="/posts/c817a34b/"/>
    <url>/posts/c817a34b/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>沛喆PZ-L8路由器刷机教程</p><h2 id="接TTL"><a href="#接TTL" class="headerlink" title="接TTL"></a>接TTL</h2><p>插好TTL,路由器主板上有标注引脚,VCC请不要接！！！</p><h2 id="上电进u-boot"><a href="#上电进u-boot" class="headerlink" title="上电进u-boot"></a>上电进u-boot</h2><p>打开终端软件，配置：115200,8,无,1,无</p><p>路由器上电后快速按esc，中断uboot启动</p><h2 id="输入smeminfo查看初始分区"><a href="#输入smeminfo查看初始分区" class="headerlink" title="输入smeminfo查看初始分区"></a>输入smeminfo查看初始分区</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">IPQ5018# </span><span class="language-bash">smeminfo</span><br>ubi0: attaching mtd1<br>ubi0: scanning is finished<br>ubi0: attached mtd1 (name &quot;mtd=0&quot;, size 58 MiB)<br>ubi0: PEB size: 131072 bytes (128 KiB), LEB size: 126976 bytes<br>ubi0: min./max. I/O unit sizes: 2048/2048, sub-page size 2048<br>ubi0: VID header offset: 2048 (aligned 2048), data offset: 4096<br>ubi0: good PEBs: 464, bad PEBs: 0, corrupted PEBs: 0<br>ubi0: user volume: 5, internal volumes: 1, max. volumes count: 128<br>ubi0: max/mean erase counter: 25/11, WL threshold: 4096, image sequence number: 1838781505<br>ubi0: available PEBs: 0, total reserved PEBs: 464, PEBs reserved for bad PEB handling: 20<br>flash_type:             0xb<br>flash_index:            0x0<br>flash_chip_select:      0x0<br>flash_block_size:       0x20000<br>flash_density:          0x80000<br>partition table offset  0x0<br>No.: Name             Attributes            Start             Size<br>  0: 0:SBL1           0x0000ffff              0x0          0x80000<br>  1: 0:MIBIB          0x0000ffff          0x80000          0x80000<br>  2: 0:BOOTCONFIG     0x0000ffff         0x100000          0x40000<br>  3: 0:BOOTCONFIG1    0x0000ffff         0x140000          0x40000<br>  4: 0:QSEE           0x0000ffff         0x180000         0x100000<br>  5: 0:QSEE_1         0x0000ffff         0x280000         0x100000<br>  6: 0:DEVCFG         0x0000ffff         0x380000          0x40000<br>  7: 0:DEVCFG_1       0x0000ffff         0x3c0000          0x40000<br>  8: 0:CDT            0x0000ffff         0x400000          0x40000<br>  9: 0:CDT_1          0x0000ffff         0x440000          0x40000<br> 10: 0:APPSBLENV      0x0000ffff         0x480000          0x80000<br> 11: 0:APPSBL         0x0000ffff         0x500000         0x140000<br> 12: 0:APPSBL_1       0x0000ffff         0x640000         0x140000<br> 13: 0:ART            0x0000ffff         0x780000         0x100000<br> 14: 0:TRAINING       0x0000ffff         0x880000          0x80000<br> 15: rootfs           0x0000ffff        0x4300000        0x3a00000<br>        ubi vol 0 kernel<br>        ubi vol 1 wifi_fw<br>        ubi vol 2 bt_fw<br>        ubi vol 3 ubi_rootfs<br>        ubi vol 4 rootfs_data<br> 16: rootfs_1         0x0000ffff         0x900000        0x3a00000<br></code></pre></td></tr></table></figure><p><img src="/img/1691567258333.webp" alt="查看初始分区"></p><h2 id="输入printenv查看初始启动参数"><a href="#输入printenv查看初始启动参数" class="headerlink" title="输入printenv查看初始启动参数"></a>输入printenv查看初始启动参数</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">IPQ5018# </span><span class="language-bash"><span class="hljs-built_in">printenv</span></span><br>baudrate=115200<br>bootcmd=bootipq<br>bootdelay=1<br>done_upgrade=0<br>eth1addr=xxxx<br>ethact=eth0<br>ethaddr=xxxx<br>fdt_high=0x4A400000<br>fdtcontroladdr=4a9c4004<br>flash_type=11<br>ignore_part=0<br>ipaddr=192.168.10.10<br>machid=8040000<br>mtddevname=fs<br>mtddevnum=0<br>mtdids=nand0=nand0<br>mtdparts=mtdparts=nand0:0x3a00000@0x4300000(fs),<br>netmask=255.255.255.0<br>new_rootfs0=1<br>new_rootfs1=1<br>partition=nand0,0<br>rootfs_num=1<br>serverip=192.168.10.19<br>soc_hw_version=20180101<br>soc_version_major=1<br>soc_version_minor=1<br>stderr=serial@78AF000<br>stdin=serial@78AF000<br>stdout=serial@78AF000<br>sysfail=0<br><br>Environment size: 630/262140 bytes<br></code></pre></td></tr></table></figure><p><img src="/img/1691567293106.webp" alt="初始启动参数"></p><h2 id="配置TFTP服务"><a href="#配置TFTP服务" class="headerlink" title="配置TFTP服务"></a>配置TFTP服务</h2><p>电脑网卡配置<br>ip地址：192.168.10.19<br>掩码：255.255.255.0<br>关闭防火墙<br>将ubi-JIKEAP_N3000.img固件放入根目录</p><h2 id="TTL刷固件"><a href="#TTL刷固件" class="headerlink" title="TTL刷固件"></a>TTL刷固件</h2><p>电脑网口接路由器WAN，输入以下命令开始刷机</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">tftpboot ubi-JIKEAP_N3000.img   <br>flash rootfs<br></code></pre></td></tr></table></figure><p>提示OK后，断电重启</p><p>搞定</p><h3 id="备用命令"><a href="#备用命令" class="headerlink" title="备用命令"></a>备用命令</h3><p>IPQ5018# nand erase 0x900000 0x3a00000</p><p>IPQ5018# setenv bootargs<br>IPQ5018# setenv eth2addr<br>IPQ5018# setenv eth3addr<br>IPQ5018# setenv fsbootargs</p><p>IPQ5018# setenv mtdparts mtdparts&#x3D;nand0:0x3a00000@0x4300000(fs),<br>IPQ5018# setenv mtdparts mtdparts&#x3D;nand0:0x3a00000@0x900000(fs),</p><p>IPQ5018# saveenv</p>]]></content>
    
    
    <categories>
      
      <category>路由器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>路由器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git上传GitHub常用命令</title>
    <link href="/posts/29dc6fe9/"/>
    <url>/posts/29dc6fe9/</url>
    
    <content type="html"><![CDATA[<h2 id="将本地文件上传到GitHub上的项目"><a href="#将本地文件上传到GitHub上的项目" class="headerlink" title="将本地文件上传到GitHub上的项目"></a>将本地文件上传到GitHub上的项目</h2><p>1.在GitHub上创建一个新的仓库（repository）。</p><p>2.在本地计算机上使用Git命令行工具或GitHub Desktop等工具初始化一个Git仓库。</p><p>3.将本地文件添加到Git仓库中，并提交更改。在Git命令行工具中，可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">git add .<br>git commit -m &quot;Add local file&quot;<br></code></pre></td></tr></table></figure><p>4.添加远程仓库的URL。在Git命令行工具中，可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git remote add origin &lt;remote repository URL&gt;<br></code></pre></td></tr></table></figure><p>5.将本地代码推送到远程仓库。在Git命令行工具中，可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git push -u origin master<br></code></pre></td></tr></table></figure><p>完成以上步骤后，你就成功将本地文件追踪到GitHub上的项目了。在以后的提交中，只需执行步骤3和5即可将更改推送到远程仓库中。</p><h2 id="commit修改成运行时的时间"><a href="#commit修改成运行时的时间" class="headerlink" title="commit修改成运行时的时间"></a>commit修改成运行时的时间</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git commit -m &quot;$(date +&quot;%Y-%m-%d %H:%M:%S&quot;)&quot;<br></code></pre></td></tr></table></figure><p>这个命令会将当前时间以 YYYY-MM-DD HH:MM:SS 的格式插入到 commit message 中，每次运行脚本都会自动更新 commit message 为当前时间。</p><h2 id="向github的分支推送"><a href="#向github的分支推送" class="headerlink" title="向github的分支推送"></a>向github的分支推送</h2><p>1.确认当前分支：使用 <code>git branch</code> 命令检查您当前所在的分支。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git branch<br></code></pre></td></tr></table></figure><p>2.创建新分支（可选）：如果您需要创建一个新的分支并将更改推送到该分支，则可以使用以下命令创建新分支，并切换到新分支：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git checkout -b new-branch-name<br></code></pre></td></tr></table></figure><p>这将创建名为 <code>new-branch-name</code> 的新分支，并切换到该分支。</p><p>3.添加更改：使用 git add 命令添加要提交的更改。例如，如果您想要提交名为 <code>index.html</code> 的文件，则可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git add index.html<br></code></pre></td></tr></table></figure><p>您也可以使用 <code>git add .</code> 命令添加所有已更改或新增的文件。</p><p>4.提交更改：使用 git commit 命令提交更改并添加注释。例如，如果您要添加一条注释：“更新首页内容”，则可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git commit -m &quot;更新首页内容&quot;<br></code></pre></td></tr></table></figure><p>5.推送更改：使用 git push 命令将更改推送到远程仓库。例如，如果您要将更改推送到名为“dev”的分支，则可以使用以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">git push origin dev<br></code></pre></td></tr></table></figure><p>在上面的命令中，“origin”表示远程仓库的名称，而“dev”则是要推送的分支。</p><p>6.查看更改：在您将更改提交到远程仓库后，在 GitHub 上的仓库页面上查看更改是否已成功推送到分支中。</p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
      <category>Leaning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>笔记</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自用续火花的QQ机器人</title>
    <link href="/posts/500de238/"/>
    <url>/posts/500de238/</url>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/maskbugzero/minibot">minibot</a></p><h2 id="功能描述"><a href="#功能描述" class="headerlink" title="功能描述"></a>功能描述</h2><p>一款基于<a href="https://github.com/GC-ZF/nonebot_plugin_firexN">nonebot_plugin_firexN</a>自用定时发送QQ消息的机器人</p><p>定时早上发一条信息,具有vip联系人以及普通联系人，可以自定义发送消息的内容及时间。</p><h2 id="安装以及依赖"><a href="#安装以及依赖" class="headerlink" title="安装以及依赖"></a>安装以及依赖</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">git clone https://github.com/maskbugzero/minibot<br>cd minibot<br>pip install -r requirements.txt<br></code></pre></td></tr></table></figure><p>配置完成后运行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">nohup python3 bot.py &gt; minibot.log 2&gt;&amp;1 &amp;<br></code></pre></td></tr></table></figure><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>在<code>.env</code>中配置参数说明</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs python">ENVIRONMENT=dev <span class="hljs-comment"># 配置文件使用.env.dev</span><br>DRIVER=~fastapi        <br></code></pre></td></tr></table></figure><p>新建一个<code>.env.dev</code>文件</p><p>在<code>.env.dev</code>中配置参数说明</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python">HOST=<span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span><br>PORT=<span class="hljs-number">8080</span><br><br>fire_vip_users = [<span class="hljs-string">&quot;xxx&quot;</span>,<span class="hljs-string">&quot;xxx&quot;</span>]    <span class="hljs-comment"># 必填 vip联系人QQ</span><br>fire_users = [<span class="hljs-string">&quot;xxx&quot;</span>,<span class="hljs-string">&quot;xxx&quot;</span>]    <span class="hljs-comment"># 必填 联系人QQ</span><br>fire_sentence_vip_moring = [<span class="hljs-string">&quot;句子1&quot;</span>,<span class="hljs-string">&quot;句子2&quot;</span>,<span class="hljs-string">&quot;...&quot;</span>]    <span class="hljs-comment"># 早上随机发送该字段中的一句</span><br>fire_sentence_moring = [<span class="hljs-string">&quot;句子1&quot;</span>,<span class="hljs-string">&quot;句子2&quot;</span>,<span class="hljs-string">&quot;...&quot;</span>]    <span class="hljs-comment"># 早上随机发送该字段中的一句</span><br>fire_time_vip_moring = <span class="hljs-string">&quot;8 0&quot;</span>    <span class="hljs-comment"># 选填 早上发送时间默认为7:00            </span><br>fire_time_moring = <span class="hljs-string">&quot;8 0&quot;</span>    <span class="hljs-comment"># 选填 早上发送时间默认为7:00           </span><br></code></pre></td></tr></table></figure><h2 id="Docker使用配置"><a href="#Docker使用配置" class="headerlink" title="Docker使用配置"></a>Docker使用配置</h2><p>将上述<code>.env.dev</code>文件存于文件夹<code>minibot</code>，其中<code>minibot</code>可以自定义</p><p>使用命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run -d --name minibot --restart=always -v /home/docker/minibot/.env.dev:/app/.env.dev -p 8080:8080 maskbugzero/minibot<br></code></pre></td></tr></table></figure><h2 id="基于"><a href="#基于" class="headerlink" title="基于"></a>基于</h2><p><a href="https://github.com/nonebot/nonebot2">Nonebot2</a></p><p><a href="https://github.com/GC-ZF/nonebot_plugin_firexN">nonebot_plugin_firexN</a></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JCG Q20路由器刷机教程</title>
    <link href="/posts/c817a32b/"/>
    <url>/posts/c817a32b/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>JCG Q20路由器刷机教程，包括刷pb-boot、集客、Padavan、TTL救砖等，同时适配于JCG Q10Pro。</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h2 id="备份分区文件"><a href="#备份分区文件" class="headerlink" title="备份分区文件"></a>备份分区文件</h2><p>打开putty软件，输入IP地址选择ssh进行登录</p><p><img src="/img/1691391217237.webp" alt="ssh"></p><p>登录用户名：root  密码：路由器底下铭牌上登陆密码。</p><p>ssh下输入查看分区命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /proc/mtd<br></code></pre></td></tr></table></figure><p>所有分区已经列出来了，使用以下命令逐个进行备份</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs shell">dd if=/dev/mtd0 of=/tmp/Bootloader.bin<br>dd if=/dev/mtd1 of=/tmp/Config.bin<br>dd if=/dev/mtd2 of=/tmp/Factory.bin<br>dd if=/dev/mtd3 of=/tmp/firmware.bin<br>dd if=/dev/mtd4 of=/tmp/kernel.bin<br>dd if=/dev/mtd5 of=/tmp/rootfs.bin<br>dd if=/dev/mtd6 of=/tmp/rootfs_data.bin<br>dd if=/dev/mtd7 of=/tmp/firmware_backup.bin<br>dd if=/dev/mtd8 of=/tmp/rootfs_data_back.bin<br>dd if=/dev/mtd9 of=/tmp/nvram_config.bin<br></code></pre></td></tr></table></figure><p>使用文件传输软件WinSCP，文件协议选SCP，主机名输路由器的IP地址，用户名：root  密码：跟SSH一样是路由器底下铭牌上登陆密码。</p><p>默认进入的是root目录，返回根目录，打开tmp文件夹将里面备份的文件复制出来，然后删除tmp文件夹内的文件。</p><h2 id="原厂系统刷集客"><a href="#原厂系统刷集客" class="headerlink" title="原厂系统刷集客"></a>原厂系统刷集客</h2><p>使用的AX1800H固件</p><p><a href="http://file.cnrouter.com/index.php/Index/index.html">集客的测试固件库</a></p><p>选择<code>JIKEAP_AX1800H_MT7621_K4_MT7915DN_WIFI6_NAND_FREE_7.4</code>开头的固件下载</p><p>需要在原厂固件下wbe内直刷，重启后就刷机完成了。</p><h2 id="刷pb-boot"><a href="#刷pb-boot" class="headerlink" title="刷pb-boot"></a>刷pb-boot</h2><p>需要过渡固件，通过过渡固件开启telnet和ssh，再在ssh内刷入pb-boot。</p><p><img src="/img/1691391217245.webp" alt="ssh登录"></p><p>先准备需要的文件：padavan过渡系统固件、pb-boot和刷机工具putty。</p><p><a href="https://download.zeuo.eu.org/q20.rar">下载地址</a></p><p>在原厂固件下选择 高级设置——左下角——升级固件——选择过渡固件——升级——等待重启。</p><p>待路由器重启后，网页登陆padavan系统的IP地址：192.168.123.1 ，输入账号密码admin登录后台</p><p>系统设置——服务——终端服务——启用telnet服务——启用ssh服务——是——保存</p><p><img src="/img/1691391217248.webp" alt="Alt text"></p><p>使用WinSCP，文件协议选SCP，主机名输路由器的IP地址，账号密码admin登陆。上传pb-boot.img到路由器tmp目录下。</p><p>打开putty软件，输入IP地址选择ssh进行登录，账号密码admin登陆。</p><p>输入命令刷入pb-boot</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mtd_write write /tmp/pb-boot.img Bootloader<br></code></pre></td></tr></table></figure><p>拔掉电源， 按住重置按钮并插上电源，在8秒后释放重置按钮，网页登陆IP地址192.168.1.1进入pb-boot</p><p>可以刷入其它支持pb-boot的固件刷breed的引导程序，在breed下刷固件：选择固件包的时候要注意由于使用了小米CR660X的pb boot，选择的时候也要选择对应小米CR660X的固件，否则无法使用</p><p>注意JCG Q20&#x2F;Q10Pro固件有很多版本，这里借用恩山大佬qquccs的原话：</p><p><code>目前论坛有三类固件，一是匹配原厂uboot的一般叫Q20，一类是匹配小米breed/pb boot的一般叫CR660X，一类是匹配小米breed/pb boot而且针对Q20的灯和wan口进行修改的也可能叫Q20，这个一定要看清楚，原厂uboot只能刷匹配原厂uboot的Q20固件，不然就会变砖!</code></p><h2 id="刷入适配pb-boot的Padavan"><a href="#刷入适配pb-boot的Padavan" class="headerlink" title="刷入适配pb boot的Padavan"></a>刷入适配pb boot的Padavan</h2><p>自编译的适配pb boot的Padavan</p><p><a href="https://github.com/Maskbugzero/padavan-4.4">项目地址</a></p><p><code>特点：完美适配灯和wan，无任何插件纯净版，无线800M左右</code></p><h2 id="TTL救砖"><a href="#TTL救砖" class="headerlink" title="TTL救砖"></a>TTL救砖</h2><p>准备一个Q20的原厂包，刷入后恢复出厂设置，第一次连接会自动输入密码，更方便</p><p>下载:<a href="https://wwd.lanzoul.com/i34hT01r0lte">https://wwd.lanzoul.com/i34hT01r0lte</a> 密码:h10f</p><p><a href="https://download.zeuo.eu.org/%E5%9B%BA%E4%BB%B6.zip">固件</a><br><a href="https://download.zeuo.eu.org/%E5%B7%A5%E5%85%B7.zip">工具</a></p><p>CH340G硬件及驱动文件，插到电脑上安装好驱动待用。</p><p><img src="/img/1691391217251.webp" alt="SSh"></p><p>先刷回官方boot，然后将路由器断电，把底部两颗拆掉，然后撬开顶上盖板及两颗螺丝，取出主板拆除天线及散热片。</p><p><img src="/img/1691391217253.webp" alt="Alt text"></p><p>在设备管理器中确认下ttl的com端口，属性——端口设置——设置好波特率115200</p><p>再putty连接，波特率115200，打开</p><p>然后给路由通电，这时候因为读不到对应的分区信息，路由会不断重启，在putty窗口不停按回车，进入下图界面</p><p>输入<code>mtkautoboot</code>回车</p><p>接下来选升级固件（Upgrade fireware）</p><p><img src="/img/1691391217239.webp" alt="Alt text"></p><p>这时候先把网线连接电脑和路由的lan口，并手动把电脑ip设置成192.168.1.2  掩码 255.255.255.0   网关192.168.1.1</p><p>打开tftp,如图设置好，点put<br><img src="/img/1691391217241.webp" alt="Alt text"></p><p>回到putty界面，选tftp<br>三次回车，输入要刷的固件名，这边是 firmware.bin<br>等待连接<br>刷入成功</p><p>最后将把电脑ip重新设为自动获取，打开路由界面</p>]]></content>
    
    
    <categories>
      
      <category>路由器</category>
      
    </categories>
    
    
    <tags>
      
      <tag>路由器</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MTK7621路由器刷Mikrotik rb750gr3固件</title>
    <link href="/posts/7c4a1a51/"/>
    <url>/posts/7c4a1a51/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>将MTK7621路由器刷成Mikrotik RB750Gr3 的编程器固件</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>1.搜索wr330或wr1200js，下单。</p><p>2.下载rb750gr3<a href="https://download.zeuo.eu.org/routeros%E7%BC%96%E8%BE%91%E5%99%A8%E5%9B%BA%E4%BB%B6.zip">编程器固件</a></p><p>3.下载wr330的<a href="https://breed.hackpascal.net/breed-mt7621-pbr-m1.bin">breed文件</a></p><h2 id="刷机"><a href="#刷机" class="headerlink" title="刷机"></a>刷机</h2><p>wr330,加电状态下长按wp，恢复出厂设置。</p><p>登陆<a href="http://192.168.0.1,在管理页面,把账号/">http://192.168.0.1，在管理页面，把账号</a> admin 改为 root ,密码Admin123并保存。</p><p>浏览器打开<a href="http://192.168.0.1/adm/telnetd.shtml">http://192.168.0.1/adm/telnetd.shtml</a> 点Telnet后面的ON使其变成OFF。</p><p>打开cmd ，输入telnet 192.168.0.1  输账号root ，回车，输密码Admin123  回车。</p><p>找一个U盘并选FAT16格式化，把“breed-mt7621-pbr-m1.bin”复制到u盘根目录，然后插入wr330 usb口。</p><p>telnet下进入u盘根目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /media/sda1<br></code></pre></td></tr></table></figure><p>备份原厂编程器固件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">dd if=/dev/mtd0 of=wr330.bin<br></code></pre></td></tr></table></figure><p>刷入 breed</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mtd_write write breed-mt7621-pbr-m1.bin Bootloader<br></code></pre></td></tr></table></figure><p>重启路由</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">reboot<br></code></pre></td></tr></table></figure><p>重启的同时，按住 WIFI 键进入 breed。</p><p>浏览器打开192.168.1.1进入breed，更新固件，选择编程器固件，去掉 “保留Bootlodert”和“保留eeprom”前面的勾，选择RB750GR3-new.bin，上传，更新。</p><p>静待一分钟，就进入routeros了。</p><h2 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h2><p><a href="https://mikrotik.com/client">https://mikrotik.com/client</a> 注册并登录。</p><p>进入后台后，找到Make a demo key 填入Software ID（Software ID在进入ros管理页面时会跳出来），点击生成，就能得到一个L1的Key，粘贴到命令行或在Winbox的system下的License 处粘贴。</p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>45块包邮，mikrotik rb750gr3到手。</p><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>中兴E8820S，改16M的SPI NOR闪存，移动板子后面两颗电阻位置，在防火墙设置里添加好fasttrack规则，电信千兆光纤基本可以跑满（注：需加强散热）；<br>友华WR330，刷后很完美，在防火墙设置里添加好fasttrack规则，电信千兆光纤基本可以跑满（注：需加强散热）；<br>中兴E8820 V2，虽然也是7621主控和16M SPI NOR闪存，但用编程器写了固件以后，WinBox无法搜索到；<br>小米路由器PRO（R3P），改16M的SPI NOR闪存，用编程器写了固件以后，WinBox无法搜索到。</p><p>——————————————————————————————<br>可刷这个固件的机型还有：<br>newifi2  D1<br>斐讯k2p（A1 A2）<br>BLINK W1200<br>bufullo wsr-1166dhp<br>toto-link a3004ns<br>友华 wr1200js</p><p>——————————————————————————————</p>]]></content>
    
    
    <categories>
      
      <category>路由器</category>
      
      <category>RouterOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>路由器</tag>
      
      <tag>RouterOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>zTC1支持接入Home Assistant</title>
    <link href="/posts/1f2b6c4/"/>
    <url>/posts/1f2b6c4/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>zTC1通过MQTT服务器接入HA，通过MQTT配置使zTC1接入HA连接的MQTT服务器。<br>必须能够用app通过mqtt进行控制，之后的homeassistant接入才能成功，如果app无法通过mqtt控制，请先完成mqtt的相关配置。</p><h2 id="Home-Assistant配置"><a href="#Home-Assistant配置" class="headerlink" title="Home Assistant配置"></a>Home Assistant配置</h2><h3 id="configuration-yaml配置"><a href="#configuration-yaml配置" class="headerlink" title="configuration.yaml配置"></a>configuration.yaml配置</h3><p>使用Packages文件夹下创建单独文件的方式来管理HA的设备</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Loads default set of integrations. Do not remove.</span><br><span class="hljs-attr">default_config:</span><br><br><span class="hljs-comment"># Load frontend themes from the themes folder</span><br><span class="hljs-attr">frontend:</span><br>  <span class="hljs-attr">themes:</span> <span class="hljs-type">!include_dir_merge_named</span> <span class="hljs-string">themes</span><br><br><span class="hljs-comment"># Text to speech</span><br><span class="hljs-attr">tts:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-attr">platform:</span> <span class="hljs-string">google_translate</span><br><br><span class="hljs-attr">automation:</span> <span class="hljs-type">!include</span> <span class="hljs-string">automations.yaml</span><br><span class="hljs-attr">script:</span> <span class="hljs-type">!include</span> <span class="hljs-string">scripts.yaml</span><br><span class="hljs-attr">scene:</span> <span class="hljs-type">!include</span> <span class="hljs-string">scenes.yaml</span><br><br><span class="hljs-attr">homeassistant:</span><br>  <span class="hljs-attr">packages:</span> <span class="hljs-type">!include_dir_named</span> <span class="hljs-string">packages</span><br></code></pre></td></tr></table></figure><h3 id="Packages文件夹配置"><a href="#Packages文件夹配置" class="headerlink" title="Packages文件夹配置"></a>Packages文件夹配置</h3><p>新建一个<code>packages</code>的文件夹。<br>如果接入多个ztc1，只需要创建多个yaml文件（文件名不同）,每个文件替换mac地址即可接入多个ztc1。</p><p>以下内容中,请将<code>MACMAC</code>替换为你的排插的mac地址,不带冒号,全部小写,如<code>123456789abc</code><br>mac地址可以在app设备设置页面中点击mac地址直接复制。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><code class="hljs .yaml">mqtt:<br>  switch:<br>    - name: &#x27;ztc1_1_MACMAC&#x27;<br>      unique_id: ztc1_1_MACMAC<br>      state_topic: &#x27;device/ztc1/MACMAC/state&#x27;<br>      command_topic: &#x27;device/ztc1/MACMAC/set&#x27;<br>      payload_on: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_0&quot;:&#123;&quot;on&quot;:1&#125;&#125;&#x27;<br>      payload_off: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_0&quot;:&#123;&quot;on&quot;:0&#125;&#125;&#x27;<br>      value_template: &#x27;&#123;&#123; value_json.plug_0.on &#125;&#125;&#x27;<br>      state_on: &#x27;1&#x27;<br>      state_off: &#x27;0&#x27;      <br><br>    - name: &#x27;ztc1_2_MACMAC&#x27;<br>      unique_id: ztc1_2_MACMAC<br>      state_topic: &#x27;device/ztc1/MACMAC/state&#x27;<br>      command_topic: &#x27;device/ztc1/MACMAC/set&#x27;<br>      payload_on: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_1&quot;:&#123;&quot;on&quot;:1&#125;&#125;&#x27;<br>      payload_off: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_1&quot;:&#123;&quot;on&quot;:0&#125;&#125;&#x27;<br>      value_template: &#x27;&#123;&#123; value_json.plug_1.on &#125;&#125;&#x27;<br>      state_on: &#x27;1&#x27;<br>      state_off: &#x27;0&#x27;<br><br>    - name: &#x27;ztc1_3_MACMAC&#x27;<br>      unique_id: ztc1_3_MACMAC<br>      state_topic: &#x27;device/ztc1/MACMAC/state&#x27;<br>      command_topic: &#x27;device/ztc1/MACMAC/set&#x27;<br>      payload_on: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_2&quot;:&#123;&quot;on&quot;:1&#125;&#125;&#x27;<br>      payload_off: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_2&quot;:&#123;&quot;on&quot;:0&#125;&#125;&#x27;<br>      value_template: &#x27;&#123;&#123; value_json.plug_2.on &#125;&#125;&#x27;<br>      state_on: &#x27;1&#x27;<br>      state_off: &#x27;0&#x27;<br><br>    - name: &#x27;ztc1_4_MACMAC&#x27;<br>      unique_id: ztc1_4_MACMAC<br>      state_topic: &#x27;device/ztc1/MACMAC/state&#x27;<br>      command_topic: &#x27;device/ztc1/MACMAC/set&#x27;<br>      payload_on: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_3&quot;:&#123;&quot;on&quot;:1&#125;&#125;&#x27;<br>      payload_off: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_3&quot;:&#123;&quot;on&quot;:0&#125;&#125;&#x27;<br>      value_template: &#x27;&#123;&#123; value_json.plug_3.on &#125;&#125;&#x27;<br>      state_on: &#x27;1&#x27;<br>      state_off: &#x27;0&#x27;<br><br>    - name: &#x27;ztc1_5_MACMAC&#x27;<br>      unique_id: ztc1_5_MACMAC<br>      state_topic: &#x27;device/ztc1/MACMAC/state&#x27;<br>      command_topic: &#x27;device/ztc1/MACMAC/set&#x27;<br>      payload_on: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_4&quot;:&#123;&quot;on&quot;:1&#125;&#125;&#x27;<br>      payload_off: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_4&quot;:&#123;&quot;on&quot;:0&#125;&#125;&#x27;<br>      value_template: &#x27;&#123;&#123; value_json.plug_4.on &#125;&#125;&#x27;<br>      state_on: &#x27;1&#x27;<br>      state_off: &#x27;0&#x27;<br><br>    - name: &#x27;ztc1_6_MACMAC&#x27;<br>      unique_id: ztc1_6_MACMAC<br>      state_topic: &#x27;device/ztc1/MACMAC/state&#x27;<br>      command_topic: &#x27;device/ztc1/MACMAC/set&#x27;<br>      payload_on: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_5&quot;:&#123;&quot;on&quot;:1&#125;&#125;&#x27;<br>      payload_off: &#x27;&#123;&quot;mac&quot;:&quot;MACMAC&quot;,&quot;plug_5&quot;:&#123;&quot;on&quot;:0&#125;&#125;&#x27;<br>      value_template: &#x27;&#123;&#123; value_json.plug_5.on &#125;&#125;&#x27;<br>      state_on: &#x27;1&#x27;<br>      state_off: &#x27;0&#x27;<br><br>  sensor:<br>    - name: &#x27;ztc1_power_MACMAC&#x27;<br>      unique_id: ztc1_power_MACMAC<br>      state_topic: &#x27;device/ztc1/MACMAC/sensor&#x27;<br>      unit_of_measurement: &#x27;W&#x27;<br>      icon: &#x27;mdi:gauge&#x27;<br>      value_template: &#x27;&#123;&#123; value_json.power &#125;&#125;&#x27;<br><br>    - name: &#x27;ztc1_time_MACMAC&#x27;<br>      unique_id: ztc1_time_MACMAC<br>      state_topic: &#x27;device/ztc1/MACMAC/sensor&#x27;<br>      #unit_of_measurement: &#x27;秒&#x27;<br>      icon: &#x27;mdi:gauge&#x27;<br>      #value_template: &#x27;&#123;&#123; value_json.total_time &#125;&#125;&#x27;<br>      value_template: &gt;-<br>        &#123;% set time = value_json.total_time %&#125;<br>        &#123;% set minutes = ((time % 3600) / 60) | int %&#125;<br>        &#123;% set hours = ((time % 86400) / 3600) | int %&#125;<br>        &#123;% set days = (time / 86400) | int %&#125;<br>        &#123;%- if time &lt; 60 -%&#125;<br>            &lt;1分钟<br>        &#123;%- else -%&#125;<br>            &#123;%- if days &gt; 0 -%&#125;<br>                  &#123;&#123; days &#125;&#125;天<br>            &#123;%- endif -%&#125;<br>            &#123;%- if hours &gt; 0 -%&#125;<br>                  &#123;&#123; hours &#125;&#125;小时<br>            &#123;%- endif -%&#125;<br>            &#123;%- if minutes &gt; 0 -%&#125;<br>                  &#123;&#123; minutes &#125;&#125;分钟<br>            &#123;%- endif -%&#125;<br>        &#123;%- endif -%&#125;<br>      <br>homeassistant:<br>  customize:<br>      switch.ztc1_1_MACMAC:<br>        friendly_name: zTC1插槽1<br>      switch.ztc1_2_MACMAC:<br>        friendly_name: zTC1插槽2<br>      switch.ztc1_3_MACMAC:<br>        friendly_name: zTC1插槽3<br>      switch.ztc1_4_MACMAC:<br>        friendly_name: zTC1插槽4<br>      switch.ztc1_5_MACMAC:<br>        friendly_name: zTC1插槽5<br>      switch.ztc1_6_MACMAC:<br>        friendly_name: zTC1插槽6<br>      sensor.ztc1_power_MACMAC:<br>        friendly_name: zTC1功率<br>      sensor.ztc1_time_MACMAC:<br>        friendly_name: zTC1运行时间<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>zTC1</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>自用RouterOS系统设置命令</title>
    <link href="/posts/c3837b48/"/>
    <url>/posts/c3837b48/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>自用RouterOS系统设置命令，包括DoH证书以及常用防火墙设置。</p><h2 id="DNS设置"><a href="#DNS设置" class="headerlink" title="DNS设置"></a>DNS设置</h2><p>使用阿里云DoH Dns地址 <code>https://dns.alidns.com/dns-query</code></p><h3 id="证书导入"><a href="#证书导入" class="headerlink" title="证书导入"></a>证书导入</h3><p>以下是证书导入代码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">/tool fetch url=&quot;https://secure.globalsign.net/cacert/Root-R5.crt&quot;<br>/tool fetch url=&quot;https://secure.globalsign.com/cacert/gseccovsslca2018.crt&quot;<br><br>/certificate import file-name=Root-R5.crt<br><br>/certificate import file-name=gseccovsslca2018.crt<br></code></pre></td></tr></table></figure><h3 id="静态地址解析"><a href="#静态地址解析" class="headerlink" title="静态地址解析"></a>静态地址解析</h3><p>RouterOS.Lan</p><ul><li>172.16.1.1</li></ul><p>dns.alidns.com</p><ul><li>223.5.5.5</li><li>223.6.6.6</li></ul><h2 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs shell"><br>/interface list<br>add name=WAN comment=&quot;defconf: Connect To Global&quot;<br>add name=LAN comment=&quot;defconf: Local Bridge&quot;<br>add name=ONU comment=&quot;onuconf: Access To ONU&quot;<br><br>/interface list member<br>add interface=pppoe-out1 list=WAN comment=&quot;defconf: Connect To Global&quot;<br>add interface=bridge1 list=LAN comment=&quot;defconf: Local Bridge&quot;<br>add interface=ether2 list=ONU comment=&quot;onuconf: Access To ONU&quot;<br><br>/ip firewall address-list<br><br>add address=192.168.1.1 comment=&quot;onuconf: ONU Address&quot; list=onu_ipv4<br>add address=172.16.1.0/24 comment=&quot;lanconf: Local Address&quot; list=local_subnet_ipv4<br><br>add address=172.16.1.1 comment=&quot;lanconf: Local DNS Address&quot; list=local_dns_ipv4<br><br><br>/ip firewall nat<br><br>add action=endpoint-independent-nat chain=srcnat protocol=udp place-before=0 comment=FullCone-Nat<br>add action=endpoint-independent-nat chain=dstnat protocol=udp place-before=0 comment=FullCone-Nat<br>add action=masquerade chain=srcnat comment=&quot;defconf: masquerade&quot; out-interface-list=WAN<br>add action=masquerade chain=srcnat out-interface-list=ONU src-address-list=local_subnet_ipv4 dst-address-list=onu_ipv4 comment=&quot;onuconf: Access To ONU&quot;<br><br><br>/ip firewall mangle<br><br>add action=change-mss chain=forward comment=&quot;defconf: Fix IPv4 MSS For WAN&quot; new-mss=clamp-to-pmtu passthrough=yes protocol=tcp tcp-flags=syn<br>add action=accept chain=prerouting src-address-list=local_subnet_ipv4 dst-address-list=onu_ipv4 comment=&quot;onuconf: Access To ONU&quot;<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>RouterOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>RouterOS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NSFW在线观看与资源搜索</title>
    <link href="/posts/8373160e/"/>
    <url>/posts/8373160e/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>NSFW！注意营养！</p><h2 id="中文在线"><a href="#中文在线" class="headerlink" title="中文在线"></a>中文在线</h2><p><a href="https://jable.tv/">https://jable.tv </a></p><p><a href="https://7mmtv.tv/zh">https://7mmtv.tv/zh </a></p><p><a href="https://www.jav777.xyz/page1.html">https://www.jav777.xyz/page1.html </a></p><p><a href="https://www.xvideos.com/">https://www.xvideos.com</a></p><p><a href="https://www.pornhub.com/">https://www.pornhub.com</a></p><p><a href="https://avgle.com/">https://avgle.com</a></p><p>91论坛：<a href="http://www.91porn.com/">http://www.91porn.com</a></p><p><a href="https://netflav.com/chinese-sub">https://netflav.com/chinese-sub</a></p><p><a href="https://pigav.com/">https://pigav.com </a></p><p>各个国家：<a href="https://xhamster.com/">https://xhamster.com</a></p><h2 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h2><p><a href="https://www.javbus.com/">https://www.javbus.com</a></p><p><a href="https://javdb.com/">https://javdb.com</a></p><p><a href="http://www.javlibrary.com/cn">http://www.javlibrary.com/cn</a></p><p><a href="https://www.141jav.com/">https://www.141jav.com</a></p><p><a href="http://www.javjunkies.com/">http://www.javjunkies.com</a></p><p><a href="http://btnets.net/">http://btnets.net</a></p><p>草榴：<a href="http://t66y.com/">http://t66y.com</a></p><p>桃花族：<a href="http://thzbt.us/">http://thzbt.us</a></p><p>色花堂：<a href="https://www.sehuatang.net/">https://www.sehuatang.net</a></p><p>油猴脚本:</p><p><a href="https://sleazyfork.org/zh-CN/scripts/25781">https://sleazyfork.org/zh-CN/scripts/25781</a></p><p>开源AV电影管理系统:</p><p><a href="https://github.com/guyueyingmu/avbook">https://github.com/guyueyingmu/avbook</a></p><p>AV网站大全：</p><p><a href="https://theporndude.com/">https://theporndude.com/</a></p>]]></content>
    
    
    <categories>
      
      <category>NSFW</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NSFW</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>个人使用的Tampermonkey油猴脚本推荐</title>
    <link href="/posts/d7689dcb/"/>
    <url>/posts/d7689dcb/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>「Tampermonkey」油猴可以通过安装各类脚本对网站进行定制。不过它能定制的不仅仅是网站的样式，还能实现更多更强大的功能，只要经过简单设置，下载一些现成脚本，就可以实现上面提到的实用的功能。Tampermonkey 提供了友好的中文化界面，懒得折腾的用户使用默认设置即可，无需更改任何选项。如果需要更多高级设置选项的话，可自行打开「初学者」或者「高级」配置模式，设置将提供动作菜单、更细致的脚本更新、TESLA、加强版编辑器、安全、黑名单检查等高级选项。</p><h2 id="脚本推荐"><a href="#脚本推荐" class="headerlink" title="脚本推荐"></a>脚本推荐</h2><h3 id="百度搜索"><a href="#百度搜索" class="headerlink" title="百度搜索"></a>百度搜索</h3><p><a href="https://greasyfork.org/zh-CN/scripts/14178">AC-baidu-重定向优化百度搜狗谷歌必应搜索_favicon_双列</a></p><p>1.绕过百度、搜狗、谷歌、好搜搜索结果中的自己的跳转链接，直接访问原始网页-反正都能看懂 2.新增自定义网站拦截功能 3添加Favicon显示 4.页面CSS 5.添加计数 6.开关选择以上功能 7.自动翻页功能</p><p>PS：默认相关功能关闭，需要的请手动开启</p><h4 id="脚本效果"><a href="#脚本效果" class="headerlink" title="脚本效果"></a>脚本效果</h4><p><img src="/img/1691391716543.webp" alt="功能设置"></p><h3 id="哔哩哔哩"><a href="#哔哩哔哩" class="headerlink" title="哔哩哔哩"></a>哔哩哔哩</h3><p><a href="https://github.com/the1812/Bilibili-Evolved#%E5%AE%89%E8%A3%85">Bilibili-Evolved</a><br>强大的哔哩哔哩增强脚本包括功能：下载视频, 音乐, 封面, 弹幕 &#x2F; 简化直播间, 评论区, 首页 &#x2F; 自定义顶栏, 删除广告, 夜间模式 &#x2F; 触屏设备支持</p><h4 id="脚本效果-1"><a href="#脚本效果-1" class="headerlink" title="脚本效果"></a>脚本效果</h4><p><img src="/img/1691391716546.webp" alt="清爽首页模式"></p><h3 id="微博"><a href="#微博" class="headerlink" title="微博"></a>微博</h3><p><a href="https://tiansh.github.io/yawf/">YAWF 药方</a></p><p>新浪微博根据关键词、作者、话题、来源等过滤微博，清理版面，以及其他改造功能</p><ul><li>跳过微博的兴趣导引，避免误关注大量“垃圾帐号”（该功能默认开启，无设置项）；</li><li>根据关键字、作者、来源等隐藏、折叠或高亮微博；使用拖拽轻松定义过滤规则；</li><li>屏蔽推广、粉丝头条、投票、好友赞过、抢红包、爱问医生等各种微博；</li><li>清理版面上的各种模块、图标、小红点，去广告；过滤热门话题；</li><li>合并左右边栏的双栏模式，加宽微博宽度和加大微博字号，自定义字体；</li><li>去除微博间的空白，调整微博版式，重新安排微博下方按钮顺序</li><li>自动检查您的关注列表并告诉您发生的变化，帮您保持关注列表的干净整洁；</li><li>设置网页模板，自定义半透明背景色，深色导航栏，经典导航栏布局；</li><li>正常大小的微博缩略图尺寸，原生视频播放器；</li><li>以及更多功能……</li></ul><h4 id="脚本效果-2"><a href="#脚本效果-2" class="headerlink" title="脚本效果"></a>脚本效果</h4><p><img src="/img/1691391716541.webp" alt="脚本设置"></p><h3 id="CSDN"><a href="#CSDN" class="headerlink" title="CSDN"></a>CSDN</h3><p><a href="https://greasyfork.org/zh-CN/scripts/378351">持续更新-csdn广告完全过滤-人性化脚本优化-不用再登录了-让你体验令人惊喜的崭新csdn</a></p><p>CSDNGreener，一款专为 Tampermonkey 插件打造的 CSDN 绿化脚本。</p><h4 id="脚本效果-3"><a href="#脚本效果-3" class="headerlink" title="脚本效果"></a>脚本效果</h4><p><img src="/img/1691391716550.webp" alt="文章阅读页面"></p><h3 id="知乎"><a href="#知乎" class="headerlink" title="知乎"></a>知乎</h3><p><a href="https://greasyfork.org/zh-CN/scripts/419081">知乎增强</a></p><p>移除登录弹窗、默认收起回答、一键收起回答、收起当前回答&#x2F;评论（点击两侧空白处）、快捷回到顶部（右键两侧空白处）、屏蔽用户 (发布的内容)、屏蔽关键词（标题&#x2F;评论）、屏蔽首页视频（视频&#x2F;文章等类别）、屏蔽盐选内容、净化标题消息、展开问题描述、置顶显示时间、完整问题时间、区分问题文章、直达问题按钮、默认高清原图、默认站外直链</p><h4 id="脚本效果-4"><a href="#脚本效果-4" class="headerlink" title="脚本效果"></a>脚本效果</h4><p><img src="/img/1691391716539.webp" alt="脚本效果"></p><h3 id="E-站"><a href="#E-站" class="headerlink" title="E 站"></a>E 站</h3><p><a href="https://github.com/EhTagTranslation/EhSyringe/releases/latest/download/ehsyringe.user.js">EhSyringe</a></p><p>E 站注射器，将中文翻译注入到 E 站体内。（中文化）</p><p>功能包括 全站翻译（大部分)、TAG 翻译、TAG 介绍、TAG 翻译数据更新、搜索框 TAG 输入提示</p><p><a href="https://openuserjs.org/scripts/alexchen/eHunter">eHunter</a></p><p>为e-hentai&#x2F;exhentai&#x2F;nhentai提供一个滚动模式和书本模式, 提供良好的阅读体验。</p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>Tampermonkey</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows常用软件</title>
    <link href="/posts/35390aee/"/>
    <url>/posts/35390aee/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>要说 Windows 平台有哪些值得推荐的常用软件，我整理了一些自己用后感觉还不错的软件，全文共有八大类，包括：<strong>多媒体类、浏览器类、图形图像类、聊天软件类、办公软件类 、系统必备类、常用工具类、博客相关类</strong> 。</p><h2 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h2><ul><li><p>PotPlayer:</p><p>视频播放</p><p>官网:<a href="https://potplayer.daum.net/">https://potplayer.daum.net/</a></p><p>下载地址:<a href="https://pan.lanzoui.com/b0f1k59qh">https://pan.lanzoui.com/b0f1k59qh</a></p></li><li><p>foobar2000:</p><p>音乐播放</p><p>官网:<a href="https://www.foobar2000.org/">https://www.foobar2000.org/</a></p><p>下载地址:<a href="http://blog.sina.com.cn/go2spa">http://blog.sina.com.cn/go2spa</a></p></li></ul><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><ul><li><p>Google Chrome:</p><p>官网:<a href="https://www.google.com/chrome/">https://www.google.com/chrome/</a></p></li><li><p>Microsoft Edge:</p><p>官网:<a href="https://www.microsoft.com/zh-cn/edge">https://www.microsoft.com/zh-cn/edge</a></p></li><li><p>Cent Browser:</p><p>个人常用</p><p>官网:<a href="https://www.centbrowser.cn/">https://www.centbrowser.cn/</a></p></li></ul><h2 id="图形图像"><a href="#图形图像" class="headerlink" title="图形图像"></a>图形图像</h2><ul><li><p>2345看图王:</p><p>附带PDF查看器</p><p>官网:<a href="https://pic.2345.cc/">https://pic.2345.cc/</a></p><p>下载地址:<a href="https://pan.lanzoui.com/iUuJ1oeuo6d">https://pan.lanzoui.com/iUuJ1oeuo6d</a></p></li><li><p>WinSnap:</p><p>截图软件</p><p>官网:<a href="https://www.ntwind.com/software/winsnap.html">https://www.ntwind.com/software/winsnap.html</a></p></li></ul><h2 id="聊天软件"><a href="#聊天软件" class="headerlink" title="聊天软件"></a>聊天软件</h2><ul><li><p>微信:</p><p>官网:<a href="https://weixin.qq.com/">https://weixin.qq.com/</a></p><p>下载地址:<a href="https://pc.weixin.qq.com/">https://pc.weixin.qq.com/</a></p></li><li><p>QQ:</p><p>官网:<a href="https://im.qq.com/index">https://im.qq.com/index</a></p><p>下载地址:<a href="https://im.qq.com/download">https://im.qq.com/download</a></p></li><li><p>Tim:</p><p>官网:<a href="https://office.qq.com/">https://office.qq.com/</a></p><p>下载地址:<a href="https://office.qq.com/download.html">https://office.qq.com/download.html</a></p></li><li><p>YY语音:</p><p>官网:<a href="https://www.yy.com/web/pcyy_download/">https://www.yy.com/web/pcyy_download/</a></p><p>下载地址:<a href="https://pan.lanzoui.com/ieLQmrqbv9e">https://pan.lanzoui.com/ieLQmrqbv9e</a></p></li><li><p>Telegram:</p><p>官网:<a href="https://telegram.org/">https://telegram.org/</a></p><p>下载地址:<a href="https://desktop.telegram.org/">https://desktop.telegram.org/</a></p></li></ul><h2 id="办公软件"><a href="#办公软件" class="headerlink" title="办公软件"></a>办公软件</h2><ul><li><p>Microsoft Office:</p><p>官网:<a href="https://www.office.com/">https://www.office.com/</a></p><p>下载地址:<a href="https://otp.landian.vip/zh-cn/download.html">https://otp.landian.vip/zh-cn/download.html</a></p></li><li><p>WPS Office:</p><p>官网:<a href="https://www.wps.cn/">https://www.wps.cn/</a></p><ul><li><p>WPS Office 2019:</p><p>WPS软件政府专用（2019版）石家庄市人力资源和社会保障局：<a href="http://rsj.sjz.gov.cn/col/1515395624617/2019/06/10/1560135309935.html">官方下载</a></p><p>WPS Office 2019 海南省直属机关单位专用（11.8.2.8875）：[官方下载](<a href="http://wpspro.support.wps.cn/gov/hainan/installation/WPS">http://wpspro.support.wps.cn/gov/hainan/installation/WPS</a> Office 2019 海南省直属机关单位专用（11.8.2.8875）.exe)</p><p>WPS Office 2019 专业版（潮州市党政机关单位）（11.8.2.8411）：<a href="http://wpspro.support.wps.cn/gov/guangdong/chaozhou/">官方下载</a> 密码：265980</p></li><li><p>WPS Office 2016:</p><p>WPS Office 2016 云南省直属党政机关专用版：<a href="https://pan.baidu.com/s/1xDYRAD6vl911OtxFNDoBQw">https://pan.baidu.com/s/1xDYRAD6vl911OtxFNDoBQw</a> 密码：9bt3</p></li></ul></li></ul><h2 id="系统必备"><a href="#系统必备" class="headerlink" title="系统必备"></a>系统必备</h2><ul><li><p>Dism++:</p><p>系统优化软件</p><p>官网:<a href="http://www.chuyu.me/zh-Hans/">http://www.chuyu.me/zh-Hans/</a></p></li><li><p>Bandizip:</p><p>解压软件</p><p>官网:<a href="http://www.bandisoft.com/bandizip/">http://www.bandisoft.com/bandizip/</a></p></li><li><p>火绒:</p><p>系统安全软件</p><p>官网:<a href="https://www.huorong.cn/">https://www.huorong.cn/</a></p></li><li><p>Deep Freeze:</p><p>系统还原软件</p><p>官网:<a href="https://www.faronics.com/en-uk/products/deep-freeze/standard">https://www.faronics.com/en-uk/products/deep-freeze/standard</a></p></li><li><p>Everything:</p><p>本地文件搜索</p><p>官网:<a href="https://www.voidtools.com/zh-cn/">https://www.voidtools.com/zh-cn/</a></p></li></ul><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><ul><li><p>Bandicam:</p><p>录屏软件</p><p>官网:<a href="https://www.bandicam.cn/">https://www.bandicam.cn/</a></p><p>下载地址:<a href="https://pan.lanzoui.com/b0f197pud">https://pan.lanzoui.com/b0f197pud</a></p></li><li><p>Clash:</p><p>不可描述</p><p>官网:<a href="https://github.com/Fndroid/clash_for_windows_pkg">https://github.com/Fndroid/clash_for_windows_pkg</a></p><p>下载地址:<a href="https://github.com/Fndroid/clash_for_windows_pkg/releases">https://github.com/Fndroid/clash_for_windows_pkg/releases</a></p></li><li><p>FFRenamePro:</p><p>批量改名</p><p>官网:<a href="http://www.ffhome.com/">http://www.ffhome.com/</a></p><p>下载地址:<a href="http://www.ffhome.com/works/1406.html">http://www.ffhome.com/works/1406.html</a></p></li><li><p>HiBitUninstaller:</p><p>软件卸载</p><p>官网:<a href="https://hibitsoft.ir/Uninstaller.html">https://hibitsoft.ir/Uninstaller.html</a></p><p>下载地址:<a href="https://hibitsoft.ir/Uninstaller.html">https://hibitsoft.ir/Uninstaller.html</a></p></li><li><p>KeePass:</p><p>密码管理</p><p>官网:<a href="https://keepass.info/">https://keepass.info/</a></p><p>下载地址:<a href="https://keepass.info/download.html">https://keepass.info/download.html</a></p></li><li><p>MyHash:</p><p>文件校验</p><p>官网:<a href="https://github.com/drag0n-app/MyHash">https://github.com/drag0n-app/MyHash</a></p></li><li><p>Netch:</p><p>游戏加速</p><p>官网:<a href="https://github.com/netchx/Netch">https://github.com/netchx/Netch</a></p><p>下载地址:<a href="https://github.com/netchx/netch/releases">https://github.com/netchx/netch/releases</a></p></li><li><p>SumatraPDF:</p><p>PDF查看</p><p>官网:<a href="https://www.sumatrapdfreader.org/free-pdf-reader">https://www.sumatrapdfreader.org/free-pdf-reader</a></p><p>下载地址:<a href="https://www.sumatrapdfreader.org/download-free-pdf-viewer">https://www.sumatrapdfreader.org/download-free-pdf-viewer</a></p></li><li><p>WinSCP:</p><p>ssh链接</p><p>官网:<a href="https://winscp.net/eng/index.php">https://winscp.net/eng/index.php</a></p><p>下载地址:<a href="https://winscp.net/eng/download.php">https://winscp.net/eng/download.php</a></p></li></ul><h2 id="博客相关"><a href="#博客相关" class="headerlink" title="博客相关"></a>博客相关</h2><ul><li><p>typora:</p><p>博客撰写</p><p>官网:<a href="https://typora.io/">https://typora.io/</a></p><p>下载地址:<a href="https://typora.io/#windows">https://typora.io/#windows</a></p></li><li><p>PicGo:</p><p>官网:<a href="https://picgo.github.io/PicGo-Doc/">https://picgo.github.io/PicGo-Doc/</a></p><p>下载地址:<a href="https://github.com/Molunerfinn/PicGo/releases">https://github.com/Molunerfinn/PicGo/releases</a></p></li><li><p>GitHubDesktop:</p><p>官网:<a href="https://desktop.github.com/">https://desktop.github.com/</a></p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>软件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一句命令激活Windows</title>
    <link href="/posts/22c45a8c/"/>
    <url>/posts/22c45a8c/</url>
    
    <content type="html"><![CDATA[<h2 id="项目说明"><a href="#项目说明" class="headerlink" title="项目说明"></a>项目说明</h2><p>服务作用：在线激活windows和office</p><p>适用对象：VOL版本的windows和office</p><p>优点：在线激活 省时省力 无需安装软件 干净环保 命令简单</p><p>缺点：服务器不挂的话自动重新授权到服务器</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><p>一般来说，只要确保的下载的是VL批量版本并且没有手动安装过任何key，你只需要使用管理员权限运行cmd执行一句命令就足够：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">slmgr /skms kms.03k.org<br></code></pre></td></tr></table></figure><p>这句命令的意思是，设置kms服务器地址（set kms），设置成功如下：</p><p><img src="/img/1691390936120.webp" alt="kms"></p><p>然后去计算机属性或者控制面板其他的什么的地方点一下激活就好了。</p><p>当然，如果你懒得点，可以多打一句命令手动激活：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">slmgr /ato<br></code></pre></td></tr></table></figure><p><img src="/img/1691390949336.webp" alt="slmgr-ato"></p><p>这句命令的意思是，马上对当前设置的key和服务器地址等进行尝试激活操作。</p><h2 id="KMS-地址列表"><a href="#KMS-地址列表" class="headerlink" title="KMS 地址列表"></a>KMS 地址列表</h2><p><a href="https://www.coolhub.top/tech-articles/kms_list.html">kms_list</a></p><p>列表数据半小时更新一次，点击表头可以进行排序。建议使用成功率高且延迟低的 KMS 主机进行激活。<br>成功率指成功次数&#x2F;测试次数，最短、最长、平均时间以及近期成功率均取最近 10 次测试结果计算。<br>数据仅供参考，实际使用情况会受网络因素影响而不同。</p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>KMS</tag>
      
      <tag>激活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AHK实现DD驱动按键连发</title>
    <link href="/posts/97324600/"/>
    <url>/posts/97324600/</url>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://www.autohotkey.com/">AutoHotkey</a></p><p>Powerful. Easy to learn.The ultimate automation scripting language for Windows.</p><p>强大的。简单易学。适用于 Windows 的终极自动化脚本语言。</p><h2 id="按键功能"><a href="#按键功能" class="headerlink" title="按键功能"></a>按键功能</h2><p>按压式连发：按下x键开启，松开x键关闭</p><p>循环连发：F4开启，F5关闭</p><p>按键暂停：F12</p><h2 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h2><figure class="highlight ahk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs AHK"><span class="hljs-meta">#Include, Class_DD.ahk</span><br><span class="hljs-meta">#MaxHotkeysPerInterval 1000</span><br><br><span class="hljs-title">~F4::</span><br>&#123;<br><span class="hljs-built_in">SetTimer,</span> Key01, <span class="hljs-number">20</span><br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-title">Key01:</span><br>dd.key(<span class="hljs-number">502</span>, <span class="hljs-number">1</span>)<br>dd.key(<span class="hljs-number">502</span>, <span class="hljs-number">2</span>)<br><span class="hljs-keyword">return</span><br><br><span class="hljs-title">~F5::</span><br>&#123;<br><span class="hljs-built_in">SetTimer,</span> Key01, Off<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-title">~x::</span><br>&#123;<br><span class="hljs-built_in">SetTimer,</span> Key02, <span class="hljs-number">20</span><br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-title">Key02:</span><br>dd.key(<span class="hljs-number">502</span>, <span class="hljs-number">1</span>)<br>dd.key(<span class="hljs-number">502</span>, <span class="hljs-number">2</span>)<br><span class="hljs-keyword">return</span><br><br><span class="hljs-title">~x UP::</span><br>&#123;<br><span class="hljs-built_in">SetTimer,</span> Key02, Off<br><span class="hljs-keyword">return</span><br>&#125;<br><br><span class="hljs-title">$F12::</span><span class="hljs-keyword">suspend</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>AHK</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AHK</tag>
      
      <tag>DD</tag>
      
      <tag>按键连发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于群晖优化可以用的一键命令</title>
    <link href="/posts/b86f5b0a/"/>
    <url>/posts/b86f5b0a/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>关于群晖优化可以用的一键命令，适用于DSM6.1X和6.2X。</p><h2 id="命令内容"><a href="#命令内容" class="headerlink" title="命令内容"></a>命令内容</h2><ul><li>一键开启DSM6.1X的root权限，命令行最后面的123456是设置root的密码，可以自己修改再运行，重启后生效。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">synouser --setpw root 123456<br></code></pre></td></tr></table></figure><ul><li>一键开启DSM6.2X的root权限，命令行最后面的123456是设置root的密码，可以自己修改再运行，重启后生效。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod 755 /etc/ssh/sshd_config &amp;&amp; sed -i &#x27;s/#PermitRootLogin prohibit-password/PermitRootLogin yes/g&#x27; /etc/ssh/sshd_config &amp;&amp; synouser --setpw root 123456<br></code></pre></td></tr></table></figure><ul><li>一键屏蔽升级（仅限DSM6.22以之前的版本，不包括DSM6.23及以上版本），运行后生效。</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">echo &quot;127.0.0.1 updated.synology.com&quot; &gt; /etc/hosts<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Synology</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nas</tag>
      
      <tag>群晖</tag>
      
      <tag>Synology</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于STM32的家庭气象站</title>
    <link href="/posts/c4f182e1/"/>
    <url>/posts/c4f182e1/</url>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/Maskbugzero/ESP8266-Weather-2021">Maskbugzero&#x2F;ESP8266-Weather-2021</a></p><p>一个关于STM32+ESP8266+DHT11的家庭气象站。</p><h2 id="硬件资源"><a href="#硬件资源" class="headerlink" title="硬件资源"></a>硬件资源</h2><ol><li>战舰V3\精英STM32F103开发板</li><li>ALIENTEK 2.8&#x2F;3.5&#x2F;4.3&#x2F;7寸TFTLCD模块(通过FSMC驱动.FSMC_NE4接LCD片选&#x2F;A10接RS)</li><li>按键KEY0(PE4)&#x2F;KEY1(PE3)&#x2F;KEY_UP(PA0.也称之为WK_UP)</li><li>ESP8266-12S WIFI模块1个</li><li>DHT11模块1个</li></ol><h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><ol><li>微信小程序配网</li><li>室内温湿度测量及显示</li><li>室外天气数据获取及显示</li><li>时间显示及网络校准</li></ol><h2 id="连接方式"><a href="#连接方式" class="headerlink" title="连接方式"></a>连接方式</h2><ul><li>模块与带有无线网卡的电脑或其他wifi设备连接：采用wifi连接</li><li>模块与开发板连接：TTL串口方式</li></ul><h3 id="ATK-ESP8266-WIFI模块与精英板连接方式"><a href="#ATK-ESP8266-WIFI模块与精英板连接方式" class="headerlink" title="ATK-ESP8266 WIFI模块与精英板连接方式"></a>ATK-ESP8266 WIFI模块与精英板连接方式</h3><p>TXD&lt;————&gt;PB11</p><p>RXD&lt;————&gt;PB10</p><p>GND&lt;————&gt;GND</p><p>VCC&lt;————&gt;3.3V\5V</p><h3 id="DHT11模块与精英板连接方式"><a href="#DHT11模块与精英板连接方式" class="headerlink" title="DHT11模块与精英板连接方式"></a>DHT11模块与精英板连接方式</h3><p>Data&lt;————&gt;PE11</p><h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><h3 id="外设初始化"><a href="#外设初始化" class="headerlink" title="外设初始化"></a>外设初始化</h3><p>初始化外设时，若DHT11工作不正常则显示屏无法正常显示。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c">LED_Init();  <span class="hljs-comment">//初始化与LED连接的硬件接口</span><br>KEY_Init();<span class="hljs-comment">//初始化按键</span><br>LCD_Init();   <span class="hljs-comment">//初始化LCD   </span><br>RTC_Init();<br><span class="hljs-keyword">while</span>(DHT11_Init())<span class="hljs-comment">//DHT11初始化</span><br>&#123;<br>  <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;DHT11 出错！\r\n&quot;</span>);<br>delay_ms(<span class="hljs-number">200</span>);<br>&#125;<br>W25QXX_Init();<span class="hljs-comment">//初始化W25Q128</span><br>tp_dev.init();<span class="hljs-comment">//初始化触摸屏</span><br>usart3_init(<span class="hljs-number">115200</span>);<span class="hljs-comment">//初始化串口3 </span><br>my_mem_init(SRAMIN);<span class="hljs-comment">//初始化内部内存池</span><br>exfuns_init();<span class="hljs-comment">//为fatfs相关变量申请内存  </span><br>f_mount(fs[<span class="hljs-number">0</span>],<span class="hljs-string">&quot;0:&quot;</span>,<span class="hljs-number">1</span>); <span class="hljs-comment">//挂载SD卡 </span><br>f_mount(fs[<span class="hljs-number">1</span>],<span class="hljs-string">&quot;1:&quot;</span>,<span class="hljs-number">1</span>); <span class="hljs-comment">//挂载FLASH.</span><br></code></pre></td></tr></table></figure><h3 id="微信小程序配网"><a href="#微信小程序配网" class="headerlink" title="微信小程序配网"></a>微信小程序配网</h3><p><img src="/img/1691390698393.webp" alt="微信小程序配网"></p><p>源码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//一键配网设置</span><br>u8 <span class="hljs-title function_">atk_8266_wifi_config</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">int</span> i;<br><br><span class="hljs-keyword">while</span>(atk_8266_send_cmd(<span class="hljs-string">&quot;AT&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>))<span class="hljs-comment">//检查WIFI模块是否在线</span><br>&#123;<br>atk_8266_quit_trans();<span class="hljs-comment">//退出透传</span><br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CIPMODE=0&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">200</span>);  <span class="hljs-comment">//关闭透传模式</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;未检测到模块!!!&quot;</span>);<br>delay_ms(<span class="hljs-number">800</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;尝试连接模块...&quot;</span>); <br>&#125; <br>u3_printf(<span class="hljs-string">&quot;AT+RESTORE&quot;</span>);<span class="hljs-comment">//恢复出厂设置</span><br>delay_ms(<span class="hljs-number">1000</span>);      <span class="hljs-comment">//延时3S等待恢复成功</span><br>delay_ms(<span class="hljs-number">1000</span>);<br>delay_ms(<span class="hljs-number">1000</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;恢复出厂设置完成&quot;</span>); <br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+RST&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>);<span class="hljs-comment">//软重启</span><br>delay_ms(<span class="hljs-number">1000</span>);         <span class="hljs-comment">//延时3S等待重启成功</span><br>delay_ms(<span class="hljs-number">1000</span>);<br>delay_ms(<span class="hljs-number">1000</span>);<br>delay_ms(<span class="hljs-number">1000</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;软重启完成&quot;</span>);<br><span class="hljs-keyword">while</span>(atk_8266_send_cmd(<span class="hljs-string">&quot;ATE0&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>));<span class="hljs-comment">//关闭回显</span><br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CWMODE=1&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">50</span>);<span class="hljs-comment">//设置WIFI STA模式</span><br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CWAUTOCONN=1&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>);   <span class="hljs-comment">//使能上电自动连接AP</span><br>delay_ms(<span class="hljs-number">300</span>);<br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CWSTARTSMART=3&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>);<span class="hljs-comment">//支持ESP-Touch和Airkiss智能配网</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;智能配网已开启  等待30s\r\n&quot;</span>);<br><span class="hljs-keyword">while</span>(i&lt;=<span class="hljs-number">30</span>)<br>&#123;<br>delay_ms(<span class="hljs-number">1000</span>);     <span class="hljs-comment">//延时30S等待配网成功</span><br>i++;<br>&#125;<br><span class="hljs-comment">//while(atk_8266_check_cmd(&quot;smartconfig connected wifi&quot;));//连接目标路由器,并且获得IP</span><br><span class="hljs-comment">//delay_ms(300);</span><br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CWSTOPSMART&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">20</span>);<span class="hljs-comment">//释放快连所占的内存</span><br><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="数据解析"><a href="#数据解析" class="headerlink" title="数据解析"></a>数据解析</h3><p><img src="/img/1691390827824.webp" alt="数据解析流程图"></p><h4 id="天气数据"><a href="#天气数据" class="headerlink" title="天气数据"></a>天气数据</h4><p>源码：（以当天天气数据为例，近3天天气数据类似)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//解析当前天气</span><br>u8 <span class="hljs-title function_">parse_now_weather</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>cJSON *root;<br>cJSON *pSub;<br>cJSON *arrayItem;<br>cJSON *pItem;<br>cJSON *pSubItem;<br>cJSON *pChildItem;<br><br><span class="hljs-type">char</span> *pr,*utf8str,*gbkstr;<br>u8 size = <span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> len;<br>u8 res;<br>u8 temperature;<br><br>root = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br>pSub = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br>pItem = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br>pSubItem = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br>pChildItem = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br>arrayItem = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(cJSON));<br><br>pr = mymalloc(SRAMIN,<span class="hljs-number">1000</span>);<br>utf8str = mymalloc(SRAMIN,<span class="hljs-number">50</span>);<br>gbkstr = mymalloc(SRAMIN,<span class="hljs-number">50</span>);<br><br><span class="hljs-built_in">memset</span>(pr,<span class="hljs-number">0</span>,<span class="hljs-number">1000</span>);<br><span class="hljs-built_in">memset</span>(gbkstr,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><span class="hljs-built_in">memset</span>(utf8str,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><br>file = mymalloc(SRAMIN,<span class="hljs-keyword">sizeof</span>(FIL));<br>res=f_open(file,(<span class="hljs-type">const</span> TCHAR*)APP_ASCII_5427,FA_READ);<span class="hljs-comment">//打开文件</span><br><span class="hljs-keyword">if</span>(res==FR_OK)<br>&#123;<br>asc2_5427 = mymalloc(SRAMIN,file-&gt;fsize);<br><span class="hljs-keyword">if</span>(asc2_5427 != <span class="hljs-literal">NULL</span>)<br>&#123;<br>res = f_read(file,asc2_5427,file-&gt;fsize,&amp;br);<br>&#125;<br>f_close(file);<br>&#125;<br><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;jieshou-&gt;1dayjson = %s\r\n&quot;</span>,USART3_RX_BUF);<br><br>root = cJSON_Parse((<span class="hljs-type">const</span> <span class="hljs-type">char</span>*)USART3_RX_BUF);<br><span class="hljs-keyword">if</span>(root != <span class="hljs-literal">NULL</span>)<br>&#123;<br>pSub = cJSON_GetObjectItem(root,<span class="hljs-string">&quot;results&quot;</span>);<br><span class="hljs-keyword">if</span>(pSub != <span class="hljs-literal">NULL</span>)<br>&#123;<br><span class="hljs-comment">//size = cJSON_GetArraySize(pSub);</span><br>arrayItem = cJSON_GetArrayItem(pSub,<span class="hljs-number">0</span>);  <br>pr = cJSON_Print(arrayItem);   <span class="hljs-comment">//获取jsom数组</span><br>pItem = cJSON_Parse(pr);       <span class="hljs-comment">//对数组，进行升级。</span><br><span class="hljs-keyword">if</span>(pItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>pSubItem = cJSON_GetObjectItem(pItem,<span class="hljs-string">&quot;location&quot;</span>);<br><span class="hljs-keyword">if</span>(pSubItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>pChildItem = cJSON_GetObjectItem(pSubItem,<span class="hljs-string">&quot;name&quot;</span>);<br><span class="hljs-keyword">if</span>(pChildItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>utf8str = pChildItem-&gt;valuestring;<br>SwitchToGbk((<span class="hljs-type">const</span> u8*)utf8str,<span class="hljs-built_in">strlen</span>(utf8str),(u8 *)gbkstr,&amp;len);  <span class="hljs-comment">//获取城市名称转换为gbk文件</span><br>Show_Str(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,lcddev.width,lcddev.height,(u8 *)gbkstr,<span class="hljs-number">16</span>,<span class="hljs-number">0</span>);         <span class="hljs-comment">//显示城市名称。</span><br>&#125;<br>&#125;<br><br><span class="hljs-built_in">memset</span>(utf8str,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>); <span class="hljs-comment">//解决阴华</span><br><span class="hljs-built_in">memset</span>(gbkstr,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><br>pSubItem = cJSON_GetObjectItem(pItem,<span class="hljs-string">&quot;now&quot;</span>);<br><span class="hljs-keyword">if</span>(pSubItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>pChildItem = cJSON_GetObjectItem(pSubItem,<span class="hljs-string">&quot;text&quot;</span>);  <span class="hljs-comment">//获取天气信息。多云</span><br><span class="hljs-keyword">if</span>(pChildItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>utf8str = pChildItem-&gt;valuestring;<br>SwitchToGbk((<span class="hljs-type">const</span> u8*)utf8str,<span class="hljs-built_in">strlen</span>(utf8str),(u8 *)gbkstr,&amp;len);<br>Show_Str(<span class="hljs-number">220</span>,<span class="hljs-number">25</span>,lcddev.width,lcddev.height,(u8 *)gbkstr,<span class="hljs-number">16</span>,<span class="hljs-number">0</span>);  <span class="hljs-comment">//显示多云</span><br>&#125;<br><span class="hljs-built_in">memset</span>(utf8str,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><span class="hljs-built_in">memset</span>(gbkstr,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><br>pChildItem = cJSON_GetObjectItem(pSubItem,<span class="hljs-string">&quot;code&quot;</span>);              <span class="hljs-comment">//获取气象代码</span><br><span class="hljs-keyword">if</span>(pChildItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>gbkstr = pChildItem-&gt;valuestring;<br>show_weather_icon((u8 *)gbkstr,<span class="hljs-number">0</span>);                           <span class="hljs-comment">//根据气象代码，更新图片</span><br>&#125;<br><span class="hljs-built_in">memset</span>(gbkstr,<span class="hljs-number">0</span>,<span class="hljs-number">50</span>);<br><br>pChildItem = cJSON_GetObjectItem(pSubItem,<span class="hljs-string">&quot;temperature&quot;</span>);     <span class="hljs-comment">//获取温度信息</span><br><span class="hljs-keyword">if</span>(pChildItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>gbkstr = pChildItem-&gt;valuestring;<br>temperature = str2int((u8 *)gbkstr);<br>gui_show_num(<span class="hljs-number">140</span>,<span class="hljs-number">22</span>,<span class="hljs-number">2</span>,RED,<span class="hljs-number">54</span>,temperature,<span class="hljs-number">0x80</span>);<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;wendu = %d\r\n&quot;</span>,temperature);<br>&#125;<br>&#125;<br><br>pSubItem = cJSON_GetObjectItem(pItem,<span class="hljs-string">&quot;last_updated&quot;</span>);<br><span class="hljs-keyword">if</span>(pSubItem != <span class="hljs-literal">NULL</span>)<br>&#123;<br>    gbkstr =pSubItem-&gt;valuestring;<br><br> LCD_ShowString(<span class="hljs-number">0</span>,<span class="hljs-number">92</span>,<span class="hljs-number">200</span>,<span class="hljs-number">20</span>,<span class="hljs-number">12</span>,(u8*)gbkstr);<br> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;1day_updata_time = %s\r\n&quot;</span>,(u8*)gbkstr);<br>&#125;<br><br><br>&#125;<br>cJSON_Delete(pItem);<br>&#125;<br>&#125;<br>cJSON_Delete(root);<br>myfree(SRAMIN,root);<br>myfree(SRAMIN,pSub);<br>myfree(SRAMIN,pItem);<br>myfree(SRAMIN,pSubItem);<br>myfree(SRAMIN,pChildItem);<br>myfree(SRAMIN,arrayItem);<br>myfree(SRAMIN,pr);<br>myfree(SRAMIN,utf8str);<br>myfree(SRAMIN,gbkstr);<br>myfree(SRAMIN,file);<br>myfree(SRAMIN,asc2_5427);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="时间数据获取和校准"><a href="#时间数据获取和校准" class="headerlink" title="时间数据获取和校准"></a>时间数据获取和校准</h4><p>源码:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><code class="hljs c">u8 <span class="hljs-title function_">get_beijing_time</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br>u8 *p;<br>u8 res;<br><br>u8 *resp;<br>u8 *p_end;<br><br><span class="hljs-comment">//u8 ipbuf[16]; //IP缓存</span><br>p=mymalloc(SRAMIN,<span class="hljs-number">40</span>);<span class="hljs-comment">//申请40字节内存</span><br><span class="hljs-built_in">sprintf</span>((<span class="hljs-type">char</span>*)p,<span class="hljs-string">&quot;AT+CIPSTART=\&quot;TCP\&quot;,\&quot;%s\&quot;,%s&quot;</span>,TIME_SERVERIP,TIME_PORTNUM);    <span class="hljs-comment">//配置目标TCP服务器</span><br>res = atk_8266_send_cmd(p,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">200</span>);<span class="hljs-comment">//连接到目标TCP服务器</span><br><span class="hljs-keyword">if</span>(res==<span class="hljs-number">1</span>)<br>&#123;<br>myfree(SRAMIN,p);<br><span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br>delay_ms(<span class="hljs-number">300</span>);<br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CIPMODE=1&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">100</span>);      <span class="hljs-comment">//传输模式为：透传</span><br><span class="hljs-comment">//atk_8266_get_wanip(ipbuf);//获取WAN IP</span><br><br>USART3_RX_STA=<span class="hljs-number">0</span>;<br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CIPSEND&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">100</span>);         <span class="hljs-comment">//开始透传</span><br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;start trans...\r\n&quot;</span>);<br>u3_printf(<span class="hljs-string">&quot;GET http://api.k780.com/?app=life.time&amp;appkey=58173&amp;sign=4e67ab8533b30580e584c8b9f0a6cc50&amp;format=json\n\n&quot;</span>);<br>delay_ms(<span class="hljs-number">20</span>);<span class="hljs-comment">//延时20ms返回的是指令发送成功的状态</span><br><span class="hljs-comment">//atk_8266_at_response(1);</span><br>USART3_RX_STA=<span class="hljs-number">0</span>;<span class="hljs-comment">//清零串口3数据</span><br>delay_ms(<span class="hljs-number">1000</span>);<br><span class="hljs-comment">//atk_8266_at_response(0);</span><br><span class="hljs-keyword">if</span>(USART3_RX_STA&amp;<span class="hljs-number">0X8000</span>)<span class="hljs-comment">//此时再次接到一次数据，为时间的数据</span><br>&#123; <br>USART3_RX_BUF[USART3_RX_STA&amp;<span class="hljs-number">0X7FFF</span>]=<span class="hljs-number">0</span>;<span class="hljs-comment">//添加结束符</span><br>&#125; <br><br>             resp=<span class="hljs-string">&quot;datetime_2&quot;</span>;<br>             p_end = (u8*)<span class="hljs-built_in">strstr</span>((<span class="hljs-type">char</span>*)USART3_RX_BUF,(<span class="hljs-type">char</span>*)resp);<br> p = p_end<span class="hljs-number">-11</span>; <span class="hljs-comment">//确定串口数据中时间的起止位，如&quot;datetime_1&quot;:&quot;2021-03-31 20:09:07&quot;,&quot;datetime_2&quot;:&quot;2021 中</span><br><br>   nwt.hour = ((*p - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span> + (*(p+<span class="hljs-number">1</span>) - <span class="hljs-number">0x30</span>));      <br>   nwt.min = ((*(p+<span class="hljs-number">3</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span> + (*(p+<span class="hljs-number">4</span>) - <span class="hljs-number">0x30</span>));<br>   nwt.sec = ((*(p+<span class="hljs-number">6</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span> + (*(p+<span class="hljs-number">7</span>) - <span class="hljs-number">0x30</span>));<br><br>   nwt.year = ((*(p<span class="hljs-number">-11</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">1000</span> + (*(p<span class="hljs-number">-10</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">100</span>+ (*(p<span class="hljs-number">-9</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span>+ (*(p<span class="hljs-number">-8</span>) - <span class="hljs-number">0x30</span>)); <br>   nwt.month = ((*(p<span class="hljs-number">-6</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span> + (*(p<span class="hljs-number">-5</span>) - <span class="hljs-number">0x30</span>));<br>   nwt.date = ((*(p<span class="hljs-number">-3</span>) - <span class="hljs-number">0x30</span>)*<span class="hljs-number">10</span> + (*(p<span class="hljs-number">-2</span>) - <span class="hljs-number">0x30</span>));<br><span class="hljs-comment">//使用指针方法获取时分秒年月日 </span><br>   RTC_Set(nwt.year,nwt.month ,nwt.date ,nwt.hour ,nwt.min,nwt.sec); <span class="hljs-comment">//使用RTC函数设置时间  </span><br><br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.year = %d\r\n&quot;</span>,nwt.year);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.month = %d\r\n&quot;</span>,nwt.month);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.date = %d\r\n&quot;</span>,nwt.date);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.hour = %d\r\n&quot;</span>,nwt.hour);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.min = %d\r\n&quot;</span>,nwt.min);<br>   <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;nwt.sec = %d\r\n&quot;</span>,nwt.sec);<br> <span class="hljs-comment">//打印时分秒年月日数据</span><br>     <span class="hljs-comment">//parse_now_time();//Cjson方法解析时间数据</span><br><br>atk_8266_quit_trans();<span class="hljs-comment">//退出透传</span><br>atk_8266_send_cmd(<span class="hljs-string">&quot;AT+CIPCLOSE&quot;</span>,<span class="hljs-string">&quot;OK&quot;</span>,<span class="hljs-number">50</span>);         <span class="hljs-comment">//关闭连接</span><br>myfree(SRAMIN,p);<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="实验现象"><a href="#实验现象" class="headerlink" title="实验现象"></a>实验现象</h2><p><img src="/img/1691390867299.webp" alt="微信配网实物图"></p><p><img src="/img/1691390882416.webp" alt="综合调试串口"></p><p><img src="/img/1691390899895.webp" alt="硬件实物图"></p><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><ol><li>4.3寸和7寸屏需要比较大电流,USB供电可能不足,请用外部电源适配器(推荐外接12V 1A电源)。</li><li>本例程在LCD_Init函数里面(在ILI93xx.c),用到了printf,如果不初始化串口1,将导致液晶无法显示!! </li><li>字库更新时,需自备标准SD卡一张(即大卡,也可以用TF卡+卡套)，并拷贝光盘:SD卡根目录文件里面的所有内容到SD卡根目录,然后将SD卡插到开发板。</li><li>对于战舰V3开发板,P8需要用跳线短接:PB10(TX)与GBC_RX，PB11(RX)与GBC_TX。</li><li>如果触摸屏不准，请按住KEY0不放，然后按复位，松开复位，进入触摸屏校准。此时松开KEY0，执行校准，即可对屏幕进行校准。</li></ol>]]></content>
    
    
    <categories>
      
      <category>STM32</category>
      
    </categories>
    
    
    <tags>
      
      <tag>STM32</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于STM32的空气质量检测仪</title>
    <link href="/posts/f691db9d/"/>
    <url>/posts/f691db9d/</url>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/Maskbugzero/STM32-GP2Y1010AU">Maskbugzero&#x2F;STM32-GP2Y1010AU</a></p><p>一个基于STM32的空气质量检测仪项目</p><h2 id="硬件资源"><a href="#硬件资源" class="headerlink" title="硬件资源"></a>硬件资源</h2><ol><li>战舰V3\精英STM32F103开发板</li><li>GP2Y1010AU气体检测模块</li></ol><h2 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h2><ul><li>室外粉尘颗粒数据获取及显示</li></ul><h2 id="连接方式"><a href="#连接方式" class="headerlink" title="连接方式"></a>连接方式</h2><p><img src="/img/1691391811956.webp" alt="电路图"></p><p><img src="/img/1691391811961.webp" alt="连接方式"></p><h2 id="主要代码"><a href="#主要代码" class="headerlink" title="主要代码"></a>主要代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span><br>&#123;<br><span class="hljs-type">char</span> str[] = <span class="hljs-string">&quot;&quot;</span>;<br>u16 PM = <span class="hljs-number">0</span>; <br>DHT11_Data_TypeDef DHT11_Data;<br><br>delay_init();<br>NVIC_Configuration();<br>uart_init(<span class="hljs-number">115200</span>);<br>GP2Y_Adc_Init();  <span class="hljs-comment">//ADC初始化     </span><br>OLED_Init();<br>OLED_ColorTurn(<span class="hljs-number">0</span>);<span class="hljs-comment">//0正常显示，1 反色显示</span><br>OLED_DisplayTurn(<span class="hljs-number">0</span>);<span class="hljs-comment">//0正常显示 1 屏幕翻转显示</span><br><br>OLED_Refresh();<br>OLED_ShowString(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&quot;PM2.5:&quot;</span>,<span class="hljs-number">16</span>); <br>OLED_ShowString(<span class="hljs-number">12</span>,<span class="hljs-number">20</span>,<span class="hljs-string">&quot;TEM:&quot;</span>,<span class="hljs-number">16</span>); <br>OLED_ShowString(<span class="hljs-number">12</span>,<span class="hljs-number">38</span>,<span class="hljs-string">&quot;HUM:&quot;</span>,<span class="hljs-number">16</span>); <br><br>OLED_ShowString(<span class="hljs-number">90</span>,<span class="hljs-number">2</span>,<span class="hljs-string">&quot;ug/m3&quot;</span>,<span class="hljs-number">12</span>); <span class="hljs-comment">//PM2.5单位 ug/m3</span><br>OLED_ShowChinese(<span class="hljs-number">100</span>,<span class="hljs-number">20</span>,<span class="hljs-number">0</span>,<span class="hljs-number">16</span>); <span class="hljs-comment">//温度单位 ℃</span><br>OLED_ShowChar(<span class="hljs-number">100</span>,<span class="hljs-number">38</span>,<span class="hljs-string">&#x27;%&#x27;</span>,<span class="hljs-number">16</span>);  <span class="hljs-comment">//湿度单位 %</span><br><br><span class="hljs-keyword">while</span>(<span class="hljs-number">1</span>)<br>&#123;<br><span class="hljs-comment">/* 粉尘传感器获取数据*/</span><br>PM = GetGP2YSingleValue();       <span class="hljs-comment">//得到pm2.5值 </span><br><span class="hljs-keyword">if</span>(PM &lt; <span class="hljs-number">10</span>)<br><span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot; %d &quot;</span>,PM);<br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(PM &lt; <span class="hljs-number">100</span>)<br><span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot;%d &quot;</span>,PM);<br><span class="hljs-keyword">else</span><br><span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot;%d&quot;</span>,PM);<br>OLED_ShowString(<span class="hljs-number">60</span>,<span class="hljs-number">2</span>,(u8 *)str,<span class="hljs-number">16</span>);<br><br><span class="hljs-comment">/* 温湿度传感器获取数据*/</span><br><span class="hljs-keyword">if</span>( Read_DHT11(&amp;DHT11_Data)==SUCCESS)<br>&#123;<br><span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot;%d.%d ℃ &quot;</span>,DHT11_Data.temp_int,DHT11_Data.temp_deci);<br>OLED_ShowString(<span class="hljs-number">60</span>,<span class="hljs-number">20</span>,(u8 *)str,<span class="hljs-number">16</span>);<br><span class="hljs-built_in">sprintf</span>(str, <span class="hljs-string">&quot;%d.%d&quot;</span>,DHT11_Data.humi_int,DHT11_Data.humi_deci);<br>OLED_ShowString(<span class="hljs-number">60</span>,<span class="hljs-number">38</span>,(u8 *)str,<span class="hljs-number">16</span>);<br>&#125;<br><span class="hljs-keyword">else</span><br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Read DHT11 ERROR!\r\n&quot;</span>);<span class="hljs-comment">//读取数据失败，串口打印：Read DHT11 ERROR.</span><br>&#125;<br><br>OLED_Refresh();<br>delay_ms(<span class="hljs-number">1000</span>);<br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="实验现象"><a href="#实验现象" class="headerlink" title="实验现象"></a>实验现象</h2><p><img src="/img/1691391811959.webp" alt="实物图"></p>]]></content>
    
    
    <categories>
      
      <category>STM32</category>
      
    </categories>
    
    
    <tags>
      
      <tag>STM32</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Netkeeper-OpenWrt——专注闪讯上网</title>
    <link href="/posts/500de237/"/>
    <url>/posts/500de237/</url>
    
    <content type="html"><![CDATA[<h2 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h2><p><a href="https://github.com/Maskbugzero/Netkeeper-OpenWrt">Maskbugzero&#x2F;Netkeeper-OpenWrt</a></p><p>使用 GitHub Actions 云编译带有闪讯拨号插件（Netkeeper）的OpenWrt编译项目。</p><h2 id="固件下载"><a href="#固件下载" class="headerlink" title="固件下载"></a>固件下载</h2><p><a href="https://github.com/Maskbugzero/Netkeeper-OpenWrt/releases">Openwrt-x86-64</a></p><h3 id="文件说明"><a href="#文件说明" class="headerlink" title="文件说明"></a>文件说明</h3><table><thead><tr><th align="left">文件名</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">sha256sums</td><td align="left">固件完整性校验文件</td></tr><tr><td align="left">config.buildinfo</td><td align="left">OpenWrt 编译配置文件</td></tr><tr><td align="left">openwrt-x86-64-generic.manifest</td><td align="left">固件内已集成软件包列表</td></tr><tr><td align="left">openwrt-x86-64-generic-generic-rootfs.tar.gz</td><td align="left">RootFS 文件</td></tr><tr><td align="left">openwrt-x86-64-generic-rootfs-ext4.img.gz</td><td align="left">不带引导的 RootFS 镜像</td></tr><tr><td align="left"><strong>openwrt-x86-64-generic-squashfs-combined.vmdk</strong></td><td align="left"><strong>VMDK 虚拟磁盘映像 (Legacy 引导)</strong></td></tr><tr><td align="left"><strong>openwrt-x86-64-generic-squashfs-combined-efi.vmdk</strong></td><td align="left"><strong>VMDK 虚拟磁盘映像 (UEFI 引导)</strong></td></tr><tr><td align="left"><strong>openwrt-x86-64-generic-squashfs-combined.img.gz</strong></td><td align="left"><strong>Squashfs 格式安装 &#x2F; 升级固件 (Legacy 引导)</strong></td></tr><tr><td align="left"><strong>openwrt-x86-64-generic-squashfs-combined-efi.img.gz</strong></td><td align="left"><strong>Squashfs 格式安装 &#x2F; 升级固件 (UEFI 引导)</strong></td></tr></tbody></table><h2 id="登录页面"><a href="#登录页面" class="headerlink" title="登录页面"></a>登录页面</h2><ul><li>用户名：root 密码为空 管理IP：192.168.1.1</li></ul><h2 id="核心功能"><a href="#核心功能" class="headerlink" title="核心功能"></a>核心功能</h2><ol><li>Netkeeper插件使用说明</li><li>自动获取闪讯密码并填写</li></ol><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h4 id="初始配置"><a href="#初始配置" class="headerlink" title="初始配置"></a>初始配置</h4><ol><li>默认Lan管理IP为<code>192.168.1.1</code>，默认第一个网口为 LAN，第二个为 WAN</li></ol><p><img src="/img/1691391007455.webp" alt="登录页面"></p><ol start="2"><li>直接登录，之后至系统 -&gt; 管理权 页面修改默认密码，点击保存应用后立即生效</li></ol><p><img src="/img/1691391032241.webp" alt="修改默认密码"></p><h3 id="Netkeeper插件使用说明"><a href="#Netkeeper插件使用说明" class="headerlink" title="Netkeeper插件使用说明"></a>Netkeeper插件使用说明</h3><h4 id="普通插件"><a href="#普通插件" class="headerlink" title="普通插件"></a>普通插件</h4><p>在 网络 -&gt; 接口 -&gt; WAN编辑 -&gt; 选择闪讯拨号 -&gt; 确认切换 后</p><p><img src="/img/1691391099821.webp" alt="切换为闪讯拨号"></p><p>然后输入 用户名 和 密码 选择对应的 闪讯插件 保存应用即可拨号</p><p><img src="/img/1691391048766.webp" alt="选择对应的闪讯插件"></p><h4 id="拦截插件"><a href="#拦截插件" class="headerlink" title="拦截插件"></a>拦截插件</h4><p>在 网络 -&gt; 接口 -&gt; WAN编辑 -&gt; 选择闪讯拨号 -&gt; 确认切换 后</p><p>选择 闪讯拦截 插件并开启闪讯拦截服务后，在PC端使用闪讯客户端拨号，会自动获取用户名与密码并拨号</p><p>可以不用填写 用户名 和 密码</p><p>在 服务 -&gt; 闪讯拦截 开启闪讯拦截服务</p><p><img src="/img/1691391142303.webp" alt="开启闪讯拦截服务"></p><h4 id="特别鸣谢"><a href="#特别鸣谢" class="headerlink" title="特别鸣谢"></a>特别鸣谢</h4><p>netkeeper的核心源码来自于miao1007的<a href="https://github.com/miao1007/Openwrt-NetKeeper">Openwrt-NetKeeper</a></p><p>编译使用的源码来自于CCnut的<a href="https://github.com/CCnut/feed-netkeeper">feed-netkeeper</a></p><h3 id="自动获取闪讯密码并填写"><a href="#自动获取闪讯密码并填写" class="headerlink" title="自动获取闪讯密码并填写"></a>自动获取闪讯密码并填写</h3><p>此功能须配合kuretru的<a href="https://github.com/kuretru/SingleNet-Robot">SingleNet-Robot</a>项目。由于本项目编译时以添加luci-mod-rpc，所以可直接使用推荐的LuCI服务端。</p><h4 id="简单使用方法："><a href="#简单使用方法：" class="headerlink" title="简单使用方法："></a>简单使用方法：</h4><ol><li>去<a href="https://github.com/kuretru/SingleNet-Robot/releases">项目</a>下载编译好的apk文件，并安装至手机</li><li>点击<strong>服务器配置</strong>，输入服务端地址’<a href="http://192.168.1.1/">http://192.168.1.1</a>‘ 及服务端网络接口名称’wan’</li><li>服务端类型选择<strong>Luci Rpc</strong>，配置路由用户名密码</li><li>点击<strong>测试服务器</strong>，若成功点击保存并退出，若失败请仔细检查服务端地址是否设置正确</li><li>在调试面板输入当前的闪讯账号及密码，并点击<strong>手动更新用户名及密码</strong>查看是否自动更新成功</li><li>点击<strong>注册定时任务</strong>以开启自动更新密码功能，无需此功能可不点击注册定时任务。若点击注册定时任务，可设置更新时间间隔。</li></ol><p><strong>PS</strong>：定制系统如MIUI等，需给予app足够的权限，其中设置sim卡时，若未给app <strong>获取手机信息</strong> 权限，将无法测试并造成闪退，且无法保存服务器数据。若未识别到收到的闪讯上网密码，则未给app <strong>读取通知类短信</strong> 权限。</p><p><strong>PS</strong>：建议使用较为廉价的备用机，关闭移动数据，打开WIFI开关，只用于更新闪讯密码，可实现无缝更新闪讯密码。</p><h4 id="特别鸣谢-1"><a href="#特别鸣谢-1" class="headerlink" title="特别鸣谢"></a>特别鸣谢</h4><p>kuretru的<a href="https://github.com/kuretru/SingleNet-Robot">SingleNet-Robot</a></p><h3 id="软路由写盘"><a href="#软路由写盘" class="headerlink" title="软路由写盘"></a>软路由写盘</h3><ol><li>将 img 文件上传</li><li>输入命令 <code>dd if=/tmp/op.img of=/dev/sda</code> 回车（op.img 为固件的名称）</li><li>最后输入 <code>reboot</code> 重启路由器</li></ol><h2 id="项目基于"><a href="#项目基于" class="headerlink" title="项目基于"></a>项目基于</h2><ul><li><a href="https://github.com/CCnut/feed-netkeeper">feed-netkeeper</a></li><li><a href="https://github.com/kuretru/SingleNet-Robot">SingleNet-Robot</a></li><li><a href="https://github.com/openwrt/openwrt">OpenWrt</a></li><li><a href="https://github.com/P3TERX/Actions-OpenWrt">P3TERX&#x2F;Actions-OpenWrt</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>OpenWrt</category>
      
    </categories>
    
    
    <tags>
      
      <tag>OpenWrt</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker常用命令</title>
    <link href="/posts/29dc6fe8/"/>
    <url>/posts/29dc6fe8/</url>
    
    <content type="html"><![CDATA[<h2 id="docker-基础命令"><a href="#docker-基础命令" class="headerlink" title="docker 基础命令"></a>docker 基础命令</h2><ul><li>启动docker</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start docker<br></code></pre></td></tr></table></figure><ul><li>关闭docker</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop docker<br></code></pre></td></tr></table></figure><ul><li>重启docker</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl restart docker<br></code></pre></td></tr></table></figure><ul><li>查看docker 运行状态 ——如果是在运行中 输入命令后 会看到绿色的active</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl status docker<br></code></pre></td></tr></table></figure><ul><li>查看docker 版本号信息</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker version<br></code></pre></td></tr></table></figure><ul><li>查看docker 详细信息 ——–此命令可以查看到docker 中容器运行个数 以及镜像个数等等</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker info<br></code></pre></td></tr></table></figure><ul><li>设置开机启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable docker<br></code></pre></td></tr></table></figure><ul><li>关闭开机启动</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl disable docker<br></code></pre></td></tr></table></figure><h2 id="docker-镜像命令"><a href="#docker-镜像命令" class="headerlink" title="docker 镜像命令"></a>docker 镜像命令</h2><ul><li>查看自己服务器中docker 镜像列表</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker images<br></code></pre></td></tr></table></figure><ul><li>拉取镜像 不加tag(版本号) 即拉取docker仓库中 该镜像的最新版本latest 加:tag 则是拉取指定版本</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker pull 镜像名 <br>docker pull 镜像名:tag<br></code></pre></td></tr></table></figure><ul><li>运行镜像</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker run 镜像名<br></code></pre></td></tr></table></figure><ul><li>删除镜像 ——当前镜像没有被任何容器使用才可以删除</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker rm [containerID] 删除容器<br>docker rmi [imageID] 删除镜像<br></code></pre></td></tr></table></figure><h2 id="docker-容器命令"><a href="#docker-容器命令" class="headerlink" title="docker 容器命令"></a>docker 容器命令</h2><ul><li>查看运行中的所有容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker ps -a <br></code></pre></td></tr></table></figure><ul><li>查看正在运行容器列表</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker ps<br></code></pre></td></tr></table></figure><ul><li>停止容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker stop 容器名/容器ID<br></code></pre></td></tr></table></figure><ul><li>重启容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker restart 容器ID/容器名<br></code></pre></td></tr></table></figure><ul><li>启动容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker start 容器ID/容器名<br></code></pre></td></tr></table></figure><ul><li>kill 容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker kill 容器ID/容器名<br></code></pre></td></tr></table></figure><ul><li>进入容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker exec -it 容器名/容器ID /bin/bash<br>docker attach 容器名/容器ID<br></code></pre></td></tr></table></figure><ul><li>退出容器</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">-----直接退出  未添加-d(持久化运行容器)时执行此参数 容器会被关闭</span>  <br>exit<br><span class="hljs-meta prompt_"># </span><span class="language-bash">优雅退出 --- 无论是否添加-d参数执行此命令容器都不会被关闭</span><br>Ctrl + p + q<br></code></pre></td></tr></table></figure><h2 id="docker-网络命令"><a href="#docker-网络命令" class="headerlink" title="docker 网络命令"></a>docker 网络命令</h2><ul><li>列所有列表的网络</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">docker network  ls<br></code></pre></td></tr></table></figure><ul><li>创建macvlan网络</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs shell">ifconfig # 查看网卡信息<br><br>docker network create -d macvlan \ # 创建macvlan网络，使用macvlan网络驱动<br>    --subnet=192.168.1.0/24 \      # 指定要桥接的网络地址<br>    --gateway=192.168.1.1 \        # 指定网关<br>    -o parent=eth0 \               # 设置要在宿主机上指定网卡<br>    bridge-host                    # 网络名称<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Docker</category>
      
      <category>Leaning</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Docker</tag>
      
      <tag>笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
